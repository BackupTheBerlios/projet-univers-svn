<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article lang="Français">

  <title>Architecture Globale</title>

  <articleinfo>

    <orgname>Équipe Projet Univers</orgname>
    <author>

      <personname><firstname>Raphaël</firstname><surname>Davaillaud</surname></personname>
      <email>drahpal@free.fr</email>

    </author>

    <author>

      <personname><firstname>Mathieu</firstname><surname>Roger</surname></personname>
      <email>rogma.boami@free.fr</email>

    </author>

    <revhistory>

      <revision><revnumber>0.1</revnumber><date>03 septembre 
      2004</date><revdescription><para>Création 
      initiale</para></revdescription></revision>

      <revision><revnumber>0.2</revnumber><date>27 novembre 
      2004</date><revdescription><para>Les noms anglais deviennent 
      français.</para></revdescription></revision>

      <revision><revnumber>0.3</revnumber><date>30 mars 
      2005</date><revdescription><para>changements pour tenir compte de 
      la réalité et descritpion en terme de modèle vue 
      controleur</para></revdescription></revision>

    </revhistory>

    <legalnotice>

      <para>Ce document est sous licence 
      <ulink url="http://www.gnu.org/copyleft/fdl.html">GNU Free 
      Documentation License</ulink></para>

    </legalnotice>

  </articleinfo>

  <sect1>

    <title>Introduction</title>

    <para>Ce document décrit l&apos;architecture globale du moteur du 
    jeu.</para>

  </sect1>

  <sect1>

    <title>Architecture</title>

    <para>Le moteur est séparé en différents modules comme suit :</para>

    <itemizedlist>

      <listitem>

        <para>NOYAU</para>

        <para>Module principal du moteur, contient le cadre 
        applicatif</para>

      </listitem>

      <listitem>

        <para>MODELE</para>

        <para>Contient la description concetpuelle des objets de 
        l&apos;univers</para>

      </listitem>

      <listitem>

        <para>ENTRÉE</para>

        <para>Module des entrées, clavier, souris et joystick...</para>

      </listitem>

      <listitem>

        <para>AFFICHAGE</para>

        <para>Module d&apos;affichage, gère l&apos;affichage 3D et 
        2D</para>

        <remark>c&apos;est une vue sur MODELE</remark>
      </listitem>

      <listitem>

        <para>RÉSEAU</para>

        <para>Module gérant la communication réseau</para>

        <remark>c&apos;est une vue sur MODELE et aussi une 
        ENTRÉE</remark>
      </listitem>

      <listitem>

        <para>SON</para>

        <para>Module de son et de musique</para>

        <remark>c&apos;est une vue sur MODELE</remark>
      </listitem>

      <listitem>

        <para>IA</para>

        <para>module d&apos;intelligence artificielle</para>

      </listitem>

      <listitem>

        <para>PHYSIQUE</para>

        <para>Module physique, gère tout le modèle physique du 
        jeu</para>

      </listitem>

    </itemizedlist>

  </sect1>

  <sect1>

    <title>Description des modules</title>

    <sect2>

      <title>NOYAU, le noyau</title>

      <para>Il comporte le strict nécessaire au fonctionnement du jeu, 
      il n&apos;y a ni affichage, ni son, ni action de joueur, ni 
      mission, juste le jeu en lui même. Il comprend la gestion des 
      états (menu, phase de jeu, configuration, etc...), la gestion des 
      autres modules, les classes de base et leur gestion, le système 
      de gestion événementielle, la gestion de la mémoire et le 
      chargement des fichiers</para>

    </sect2>

    <sect2>

      <title>UNIVERS, l&apos;univers du jeu</title>

      <para>C&apos;est en fait une sur couche du module NOYAU. 
      C&apos;est lui qui va faire que le jeux est celui qu&apos;il doit 
      être, il s&apos;occupera de la gestion des joueurs, des missions. 
      C&apos;est grâce à lui qu&apos;on pourra facilement générer des 
      variantes. Dans la suite du document, je ne parlerais que de 
      NOYAU.</para>

    </sect2>

    <sect2>

      <title>ENTRÉE, les entrées utilisateur</title>

      <para>Ce module gère les entrées utilisateur et envoi les 
      informations au module NOYAU pour action.</para>

      <para>Sa communication avec le NOYAU ne se résume pas à passer la 
      touche pressée ou le mouvement du joystick, mais plutôt 
      d&apos;envoyer une information de type action, par exemple : 
      &quot;demande d&apos;accélération&quot;, &quot;affichage de la 
      console&quot; ou encore &quot;envoi d&apos;une 
      communication&quot;.</para>

      <para>Ce module doit donc pouvoir être configuré par le NOYAU 
      pour lui affecter les entrées correspondantes à ces actions. 
      Cette configuration serait multi-mode, un mode console, un mode 
      menu, un mode vol, etc... chaque mode aura une grille de 
      correspondance entrée/action.</para>

    </sect2>

    <sect2>

      <title>AFFICHAGE, l&apos;affichage</title>

      <para>Il se charge uniquement de l&apos;affichage d&apos;un état 
      de NOYAU.</para>

      <para>Le module AFFICHAGE ne fait que lire les informations du 
      NOYAU, il n&apos;agit pas sur elles. Plus précisément le NOYAU 
      dispose d&apos;objets pouvant être affichés ( 
      <foreignphrase lang="anglais">Renderable</foreignphrase>) et 
      d&apos;autres non ( <foreignphrase lang="anglais">
      Non-Renderable</foreignphrase>).</para>

      <para>Les objets pouvant être affichés posséderont des propriétés 
      obligatoires telle que la source (généralement un mesh) et sa 
      position dans l&apos;espace local d&apos;affichage (ceci pour la 
      phase de jeu). Le module AFFICHAGE va lire ces informations et 
      les traduire en informations graphique et les afficher sur 
      l&apos;écran.</para>

      <para>Il y a aussi d&apos;autres type d&apos;objet pouvant être 
      affichés représentant des informations abstraites, par exemple, 
      un menu, le résumé de l&apos;état d&apos;un vaisseau, la 
      notification d&apos;une communication ou tout autre élément 
      visuel.</para>

    </sect2>

    <sect2>

      <title>RÉSEAU, la communication réseau</title>

      <para>Il se charge de la gestion du jeu en réseau.</para>

      <para>Il interagit avec NOYAU pour permettre de partager les 
      informations sur un réseau.</para>

    </sect2>

    <sect2>

      <title>SON, l&apos;audio</title>

      <para>De la même manière que le module AFFICHAGE, il ne fait que 
      lire des informations du NOYAU pour diffuser du son.</para>

      <para>Il s&apos;occupe également de la diffusion des musiques 
      d&apos;ambiance, par exemple de la lecture de fichier audio ou de 
      CD audio</para>

    </sect2>

    <sect2>

      <title>IA, l&apos;intelligence artificielle</title>

      <para>Ce module est similaire au module ENTRÉE dans la mesure où 
      il est sensé commander des objets de NOYAU en y envoyant des 
      informations. La différence réside dans le fait qu&apos;il reçoit 
      également des informations sur l&apos;état de NOYAU pour 
      remplacer le fait qu&apos;un utilisateur le voit directement à 
      l&apos;écran.</para>

    </sect2>

    <sect2>

      <title>PHYSIQUE, le modèle physique</title>

      <para>Ce module gère la manière dont les objets de NOYAU vont 
      réagir aux informations fournies par ENTRÉE et IA.</para>

      <para>Il doit donc gérer les effets gravitationnels, 
      atmosphérique, les phénomènes d&apos;inertie, de voile 
      (noir/rouge) et éventuellement il doit gérer les 
      collisions.</para>

    </sect2>

  </sect1>

  <sect1>

    <title>Module et implémentation</title>

    <para>Le module NOYAU est le module central du moteur, celui là ne 
    peut être remplacé, alors que les autres peuvent avoir des 
    implémentations différentes.</para>

    <para>Par exemple, le module AFFICHAGE peut très bien être une 
    implémentation utilisant le moteur 3D OGRE3D ou une autre 
    implémentation utilisant Irlich. Ces 2 implémentations seront 
    valide à partir du moment où elle respecte l&apos;interface 
    standard du module AFFICHAGE.</para>

    <para>Chaque module possède donc une interface standard que chaque 
    implémentation doit respecter afin que NOYAU puisse communiquer. Il 
    se peut toutefois qu&apos;un module ait besoin de communiquer 
    directement avec un autre sans passer par le NOYAU, pour cela, les 
    modules peuvent disposer d&apos;autres interfaces.</para>

  </sect1>

  <sect1>

    <title>Réalisation technique</title>

    <para>Au final, le plus intéressant serait que chaque module (sauf 
    NOYAU) soit une librairie dynamique (DLL pour Windows, DSO pour 
    Linux), qui serait chargé par un exécutable. L&apos;utilisateur 
    pourrait choisir à loisir les implémentations suivant sa 
    configuration ou ses propres goûts. Cela permet à d&apos;autres de 
    développer des implémentations offrant d&apos;autres 
    possibilités.</para>

    <para>Mais dans un premier temps, tout les modules seront dans un 
    seul exécutable, la séparation modulaire se fera par le biais de 
    l&apos;utilisation de <foreignphrase lang="english">
    namespaces</foreignphrase> distinct reprenant le nom du module. 
    Sans oublier d&apos;utiliser les interfaces standard.</para>

  </sect1>

</article>

