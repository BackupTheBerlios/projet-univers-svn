<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article>
  <title>Module Réseau</title>

  <articleinfo>
    <abstract>
      <para>Ce document décrit les objectifs et les principes du module
      réseau.</para>
    </abstract>

    <orgname>Équipe du Projet Univers</orgname>

    <author>
      <personname>
        <firstname>Mathieu</firstname>

        <surname>Roger</surname>
      </personname>

      <email>rogmaboami@hotmail.com</email>
    </author>

    <revhistory>
      <revision>
        <revnumber>0.1</revnumber>

        <date>4 septembre 2004</date>

        <revdescription>
          <para>Création initiale.</para>
        </revdescription>
      </revision>

      <revision>
        <revnumber>0.2</revnumber>

        <date>11 novembre 2004</date>

        <revdescription>
          <para>Modification du plan</para>
        </revdescription>
      </revision>

      <revision>
        <revnumber>0.3</revnumber>

        <date>31 août 2005</date>

        <revdescription>
          <para>Intégration de quelques notes papier.</para>

          <para>Modification du plan.</para>

          <para>Correction orthographe.</para>
        </revdescription>
      </revision>
    </revhistory>

    <legalnotice>
      <para>Ce document est sous licence <ulink
      url="http://www.gnu.org/copyleft/fdl.html">GNU Free Documentation
      License</ulink></para>
    </legalnotice>
  </articleinfo>

  <section>
    <title>Objectif</title>

    <para>Le module réseau a pour objectif de gérer un ensemble d'objets
    distribués sur un réseau.</para>

    <para>Chaque objet possède une coordonnée spatio-temporelle, c'est à dire
    un couple (position dans l'espace, moment), et d'autres informations; qui
    sont génériques (c'est à dire qu'on choisit d'y mettre ce que l'on veut en
    fonction de l'utilisation de cette bibliothèque).</para>

    <para>L'objectif est que tous les clients du réseau connaissent avec le
    plus de précision possible la position à chaque instant de chaque objet
    ainsi que les informations génériques.</para>
  </section>

  <section>
    <title>Techniques</title>

    <section>
      <title>Une technique totalement distribuée</title>

      <section>
        <title>Principe général</title>

        <para>Les principes :</para>

        <itemizedlist>
          <listitem>
            <para>chaque machine envoie directement vers chaque autre
            machine</para>

            <para>On peut éventuellement envisager un relais pour les machines
            faibles en émission.</para>
          </listitem>

          <listitem>
            <para>chaque machine répartit son émission vers une autre machine
            en fonction de sa proximité dans le jeu (en fait de la proximité
            des objets qu'elle gère)</para>
          </listitem>
        </itemizedlist>

        <para>Globalement, l'idée est de d'envoyer plus souvent les mises à
        jour des informations aux ordinateurs qui gèrent des objets proches
        (dans le système de coordonnées).</para>

        <para>Les données génériques sont envoyées avec un débit moindre que
        les informations sur les coordonnées spatiaux-temporelles.</para>

        <para>La coordonnée spatio-temporelle est très importante : elle va
        permettre de savoir quel client réseau est intéressé par quelle
        information.</para>

        <para>Considérons un des membres d'un réseau distribué qui gère un
        objet <varname>objet</varname>, supposons qu'il ait
        <varname>emission_maximum_client</varname> comme quantité d'émission
        réseau maximum (par exemple, 16 kilo-bits par seconde pour un ADSL),
        cette valeur sera répartie entre les autres clients en fonction de la
        distance :</para>

        <itemizedlist>
          <listitem>
            <formalpara>
              <title>Les clients éloignés</title>

              <para>Ces clients sont ceux qui gèrent des objets du jeu qui
              sont tous très éloignés (dans le jeu) de
              <varname>objet</varname>. Ces clients n'ont pas besoin de
              connaître avec précision les données concernant
              <varname>objet</varname>.<example>
                  <title>Exemple</title>

                  <para>Ces clients reçoivent 1% de l'émission</para>
                </example></para>
            </formalpara>
          </listitem>

          <listitem>
            <formalpara>
              <title>Les clients proches</title>

              <para>Ces clients sont ceux qui gèrent des objets du jeu qui
              sont très proche de objet.</para>
            </formalpara>

            <example>
              <title>Exemple</title>

              <para>Ces clients reçoivent 80% de l'émission</para>
            </example>
          </listitem>

          <listitem>
            <formalpara>
              <title>Les clients intermédiaires</title>

              <para>Ces clients sont ceux qui gèrent des objets du jeu</para>
            </formalpara>

            <example>
              <title>Exemple</title>

              <para>Ces clients reçoivent 19% de l'émission</para>
            </example>
          </listitem>
        </itemizedlist>

        <remark>Cette approche peut être combinée avec une architecture
        client/serveur partielle lorsque le nombre de clients dépasse un
        certain seuil.</remark>
      </section>

      <section>
        <title>Messages</title>

        <para>Tous les messages reçoivent une importance.</para>

        <para>Cette importance conditionne la rapidité avec laquelle ce
        message doit arriver à ses destinataires</para>

        <para>En pratique, et à titre d'exemple, un message très important
        pourra être envoyé par une connexion directe entre l'émetteur du
        message et le destinataire.</para>

        <section>
          <title>Création d'un nouvel objet</title>

          <para>L'ordinateur qui crée un nouvel objet informe tous les autres
          ordinateurs du réseau.</para>

          <para>La réception de ce message doit être garantie.</para>
        </section>

        <section>
          <title>Destruction d'un objet</title>

          <para>L'ordinateur qui détruit un objet qu'il gère informe tous les
          autres ordinateurs du réseau</para>

          <para>La réception de ce message doit être garantie.</para>
        </section>

        <section>
          <title>Nouvelle position d'un objet</title>

          <para>Les nouvelles positions de certains types d'objets doivent
          être transmises. Il n'est pas nécessaire de transmettre la position,
          notamment, pour les objets qui une fois créés ont une trajectoire
          prévisible. Pour ce faire, la classe <classname>Objet</classname>
          possède deux sous-classes distinctes, une classe
          <classname>ObjetAPositionPrevisible</classname> et
          <classname>ObjetAPositionImprevisible</classname></para>

          <para><classname>La réception de ce message n'a pas besoin d'être
          garantie.</classname></para>
        </section>

        <section>
          <title>Nouvelle valeur des informations génériques</title>

          <para>A faire...</para>
        </section>
      </section>
    </section>

    <section>
      <title>Une technique client-serveur</title>

      <para>A faire...</para>
    </section>
  </section>
</article>