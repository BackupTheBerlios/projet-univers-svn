/***************************************************************************
 *   This file is part of ProjetUnivers                                    *
 *   see http://www.punivers.net                                           *
 *   Copyright (C) 2007 Mathieu ROGER                                      *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
#include <math.h>
#include <iostream>
#include <ode/ode.h>

#include <kernel/log.h>
#include <kernel/parameters.h>
#include <model/mesh.h>

#include <physic/implementation/ode/ode.h>
#include <physic/implementation/ode/mass_property.h>

#include <physic/test/test_ode.h>

CPPUNIT_TEST_SUITE_REGISTRATION(ProjetUnivers::Physic::Test::TestODE) ;

namespace ProjetUnivers {
  namespace Physic {

    using namespace Implementation::Ode ;
    
    namespace Test {

      const float pi = 3.1415926 ;

      namespace
      {
        const int VertexCount = 5 ;
        const int IndexCount = 12 ;

        dVector3 Size ;
        dVector3 Vertices[VertexCount] ;
        int Indices[IndexCount] ;
        dGeomID TriMesh ;
      }

      void TestODE::testTwoWorlds()
      {
//        std::cout << std::endl ;
        
        std::auto_ptr<dWorld> world1(new dWorld()) ; 

        std::auto_ptr<dBody> body1(new dBody(world1->id())) ;
        body1->setPosition(0,0,0) ;
        body1->setLinearVel(10,0,0) ;      
        body1->setAngularVel(0,2*pi,0) ;
        
//        std::cout << body1->isEnabled() << std::endl ;

        const int number_of_step = 100 ;
        for (int i = 1 ; i <= number_of_step ; ++i)
        {
          world1->step(1.0/number_of_step) ;
          const dReal* final_orientation = body1->getQuaternion() ;
//          std::cout << "body1 orientation=" << final_orientation[0] << "," 
//                    << final_orientation[1] << ","
//                    << final_orientation[2] << ","
//                    << final_orientation[3] << std::endl ;

          const dReal* position = body1->getPosition() ;
//          std::cout << "body1 position=" << position[0] << "," 
//                    << position[1] << ","
//                    << position[2] << std::endl ;

        }
       
      }

      void TestODE::testTrimesh()
      {
        dInitODE();
        
        std::auto_ptr<dWorld> world(new dWorld()) ;
        dBody* body = new dBody(world->id()) ;
        
        Size[0] = 5.0f;
        Size[1] = 5.0f;
        Size[2] = 2.5f;
        
        Vertices[0][0] = -Size[0];
        Vertices[0][1] = -Size[1];
        Vertices[0][2] = Size[2];
        
        Vertices[1][0] = Size[0];
        Vertices[1][1] = -Size[1];
        Vertices[1][2] = Size[2];
        
        Vertices[2][0] = Size[0];
        Vertices[2][1] = Size[1];
        Vertices[2][2] = Size[2];
        
        Vertices[3][0] = -Size[0];
        Vertices[3][1] = Size[1];
        Vertices[3][2] = Size[2];
        
        Vertices[4][0] = 0;
        Vertices[4][1] = 0;
        Vertices[4][2] = 0;
        
        Indices[0] = 0;
        Indices[1] = 1;
        Indices[2] = 4;
        
        Indices[3] = 1;
        Indices[4] = 2;
        Indices[5] = 4;
        
        Indices[6] = 2;
        Indices[7] = 3;
        Indices[8] = 4;
        
        Indices[9] = 3;
        Indices[10] = 0;
        Indices[11] = 4;
        
        dTriMeshDataID Data = dGeomTriMeshDataCreate();
        
        dGeomTriMeshDataBuildSingle(Data, 
                                    &Vertices[0],3*sizeof(float),VertexCount,
                                    &Indices[0],IndexCount,3*sizeof(int));
        
        TriMesh = dCreateTriMesh(0, Data, 0, 0, 0) ;
        dGeomSetData(TriMesh, Data) ;
        
        dMass mass ;
        body->getMass(&mass) ;

//        std::cout << "masse avant " << printMass(mass) << std::endl ;

        dGeomSetBody(TriMesh,body->id()) ;

        body->getMass(&mass) ;

//        std::cout << "masse apres " << printMass(mass) << std::endl ;

        dMassSetTrimesh(&mass,1,TriMesh) ;
        dMassAdjust(&mass,1) ;
        dBodySetMass(body->id(),&mass) ;

//        std::cout << "masse " << printMass(mass) << std::endl ;

        body->setPosition(100,100,100) ;
        body->getMass(&mass) ;
//        std::cout << "masse " << printMass(mass) << std::endl ;

//        dGeomSetPosition(TriMesh, 0, 0, 0);
//        dMatrix3 Rotation;
//        dRFromAxisAndAngle(Rotation, 1, 0, 0, M_PI / 2);
//        dGeomSetRotation(TriMesh, Rotation);
     
        dReal* aabb = new dReal[6] ;
        dGeomGetAABB(TriMesh,aabb) ;
        
        
      }

      void onGeometryCollision(void*   i_world,
                               dGeomID i_geometry1,
                               dGeomID i_geometry2)
      {

        dContactGeom contacts[10] ;
        
        if (dCollide(i_geometry1,
                     i_geometry2,
                     10,
                     contact_points,
                     sizeof(dContactGeom)) != 0)
        {
          std::cout << "contact" ;
        }                     
        else
        {
          std::cout << "pas contact" ;
        }                     

      }

      void TestODE::testTrimeshCubeCollision()
      {
        dInitODE();

        int VertexCount = 588 ;
        int IndexCount = 1404 ;
        dVector3 vertex[VertexCount] ;
        int indices[IndexCount] ;

        vertex[0][0]=-22.9469;
        vertex[0][1]=-0.241053;
        vertex[0][2]=23.6274;
        vertex[0][3]=0;
        vertex[1][0]=-22.9469;
        vertex[1][1]=-4.39578;
        vertex[1][2]=-0.189721;
        vertex[1][3]=0;
        vertex[2][0]=-11.8147;
        vertex[2][1]=-0.241053;
        vertex[2][2]=-0.18972;
        vertex[2][3]=0;
        vertex[3][0]=-11.8147;
        vertex[3][1]=-0.241053;
        vertex[3][2]=23.6274;
        vertex[3][3]=0;
        vertex[4][0]=-0.514736;
        vertex[4][1]=-0.241053;
        vertex[4][2]=-0.18972;
        vertex[4][3]=0;
        vertex[5][0]=-0.514736;
        vertex[5][1]=-0.241053;
        vertex[5][2]=23.6274;
        vertex[5][3]=0;
        vertex[6][0]=10.6174;
        vertex[6][1]=-4.39578;
        vertex[6][2]=-0.189721;
        vertex[6][3]=0;
        vertex[7][0]=10.6174;
        vertex[7][1]=-0.241053;
        vertex[7][2]=23.6274;
        vertex[7][3]=0;
        vertex[8][0]=8.77589;
        vertex[8][1]=0.991149;
        vertex[8][2]=29.0597;
        vertex[8][3]=0;
        vertex[9][0]=1.32682;
        vertex[9][1]=0.991149;
        vertex[9][2]=29.0597;
        vertex[9][3]=0;
        vertex[10][0]=10.6174;
        vertex[10][1]=-4.39578;
        vertex[10][2]=-26.8564;
        vertex[10][3]=0;
        vertex[11][0]=-0.514736;
        vertex[11][1]=-1.33049;
        vertex[11][2]=-26.8564;
        vertex[11][3]=0;
        vertex[12][0]=-11.8147;
        vertex[12][1]=-1.33049;
        vertex[12][2]=-26.8564;
        vertex[12][3]=0;
        vertex[13][0]=-22.9469;
        vertex[13][1]=-4.39578;
        vertex[13][2]=-26.8564;
        vertex[13][3]=0;
        vertex[14][0]=-11.8147;
        vertex[14][1]=-1.33049;
        vertex[14][2]=-53.523;
        vertex[14][3]=0;
        vertex[15][0]=-22.9469;
        vertex[15][1]=-0.241053;
        vertex[15][2]=-53.5231;
        vertex[15][3]=0;
        vertex[16][0]=-45.3232;
        vertex[16][1]=-5.97232;
        vertex[16][2]=-31.5436;
        vertex[16][3]=0;
        vertex[17][0]=-45.3232;
        vertex[17][1]=-1.8176;
        vertex[17][2]=-58.2103;
        vertex[17][3]=0;
        vertex[18][0]=-56.5113;
        vertex[18][1]=-3.84453;
        vertex[18][2]=-40.073;
        vertex[18][3]=0;
        vertex[19][0]=-56.5113;
        vertex[19][1]=-3.84453;
        vertex[19][2]=-66.7396;
        vertex[19][3]=0;
        vertex[20][0]=-74.048;
        vertex[20][1]=-5.97753;
        vertex[20][2]=-40.073;
        vertex[20][3]=0;
        vertex[21][0]=-86.4842;
        vertex[21][1]=-8.61674;
        vertex[21][2]=-75.8576;
        vertex[21][3]=0;
        vertex[22][0]=-70.2055;
        vertex[22][1]=-4.32476;
        vertex[22][2]=-21.7621;
        vertex[22][3]=0;
        vertex[23][0]=-56.5113;
        vertex[23][1]=-2.83315;
        vertex[23][2]=-13.4063;
        vertex[23][3]=0;
        vertex[24][0]=-45.3232;
        vertex[24][1]=-5.57043;
        vertex[24][2]=-4.87695;
        vertex[24][3]=0;
        vertex[25][0]=-56.5113;
        vertex[25][1]=-0.770653;
        vertex[25][2]=-4.89599;
        vertex[25][3]=0;
        vertex[26][0]=-45.3232;
        vertex[26][1]=0.646782;
        vertex[26][2]=4.78452;
        vertex[26][3]=0;
        vertex[27][0]=-31.4688;
        vertex[27][1]=-0.556674;
        vertex[27][2]=15.6396;
        vertex[27][3]=0;
        vertex[28][0]=-63.7347;
        vertex[28][1]=-2.26227;
        vertex[28][2]=-13.4063;
        vertex[28][3]=0;
        vertex[29][0]=-22.9469;
        vertex[29][1]=-0.241053;
        vertex[29][2]=-63.5231;
        vertex[29][3]=0;
        vertex[30][0]=-11.8147;
        vertex[30][1]=-0.241053;
        vertex[30][2]=-63.5231;
        vertex[30][3]=0;
        vertex[31][0]=-0.514736;
        vertex[31][1]=-1.33049;
        vertex[31][2]=-53.523;
        vertex[31][3]=0;
        vertex[32][0]=10.6174;
        vertex[32][1]=-0.241053;
        vertex[32][2]=-53.5231;
        vertex[32][3]=0;
        vertex[33][0]=32.9937;
        vertex[33][1]=-1.8176;
        vertex[33][2]=-58.2103;
        vertex[33][3]=0;
        vertex[34][0]=32.9937;
        vertex[34][1]=-5.97232;
        vertex[34][2]=-31.5436;
        vertex[34][3]=0;
        vertex[35][0]=44.1818;
        vertex[35][1]=-3.84453;
        vertex[35][2]=-66.7396;
        vertex[35][3]=0;
        vertex[36][0]=44.1818;
        vertex[36][1]=-3.84453;
        vertex[36][2]=-40.073;
        vertex[36][3]=0;
        vertex[37][0]=32.9937;
        vertex[37][1]=-5.57044;
        vertex[37][2]=-4.87695;
        vertex[37][3]=0;
        vertex[38][0]=44.1818;
        vertex[38][1]=-2.83315;
        vertex[38][2]=-13.4063;
        vertex[38][3]=0;
        vertex[39][0]=61.7185;
        vertex[39][1]=-5.97753;
        vertex[39][2]=-40.073;
        vertex[39][3]=0;
        vertex[40][0]=57.8761;
        vertex[40][1]=-4.32476;
        vertex[40][2]=-21.7621;
        vertex[40][3]=0;
        vertex[41][0]=44.1818;
        vertex[41][1]=-0.770653;
        vertex[41][2]=-4.89599;
        vertex[41][3]=0;
        vertex[42][0]=32.9937;
        vertex[42][1]=0.646782;
        vertex[42][2]=4.78452;
        vertex[42][3]=0;
        vertex[43][0]=74.1547;
        vertex[43][1]=-8.61674;
        vertex[43][2]=-75.8576;
        vertex[43][3]=0;
        vertex[44][0]=-0.514736;
        vertex[44][1]=-0.241053;
        vertex[44][2]=-63.5231;
        vertex[44][3]=0;
        vertex[45][0]=10.6174;
        vertex[45][1]=-0.241053;
        vertex[45][2]=-63.5231;
        vertex[45][3]=0;
        vertex[46][0]=-0.514736;
        vertex[46][1]=-0.241053;
        vertex[46][2]=-68.5231;
        vertex[46][3]=0;
        vertex[47][0]=10.6174;
        vertex[47][1]=-0.241053;
        vertex[47][2]=-68.5231;
        vertex[47][3]=0;
        vertex[48][0]=-22.9469;
        vertex[48][1]=-0.241053;
        vertex[48][2]=-68.5231;
        vertex[48][3]=0;
        vertex[49][0]=-11.8147;
        vertex[49][1]=-0.241053;
        vertex[49][2]=-68.5231;
        vertex[49][3]=0;
        vertex[50][0]=-2.97265;
        vertex[50][1]=-4.38478;
        vertex[50][2]=46.4769;
        vertex[50][3]=0;
        vertex[51][0]=-9.35683;
        vertex[51][1]=-4.38478;
        vertex[51][2]=46.4769;
        vertex[51][3]=0;
        vertex[52][0]=-4.09493;
        vertex[52][1]=-4.5545;
        vertex[52][2]=66.5352;
        vertex[52][3]=0;
        vertex[53][0]=-8.23454;
        vertex[53][1]=-4.5545;
        vertex[53][2]=66.5352;
        vertex[53][3]=0;
        vertex[54][0]=-3.97481;
        vertex[54][1]=-1.56937;
        vertex[54][2]=76.5126;
        vertex[54][3]=0;
        vertex[55][0]=-8.35466;
        vertex[55][1]=-1.56937;
        vertex[55][2]=76.5126;
        vertex[55][3]=0;
        vertex[56][0]=-13.6563;
        vertex[56][1]=0.991149;
        vertex[56][2]=29.0597;
        vertex[56][3]=0;
        vertex[57][0]=-21.1054;
        vertex[57][1]=0.991149;
        vertex[57][2]=29.0597;
        vertex[57][3]=0;
        vertex[58][0]=-16.095;
        vertex[58][1]=15.9427;
        vertex[58][2]=19.1173;
        vertex[58][3]=0;
        vertex[59][0]=-13.1707;
        vertex[59][1]=16.7089;
        vertex[59][2]=19.1173;
        vertex[59][3]=0;
        vertex[60][0]=-11.8147;
        vertex[60][1]=16.7089;
        vertex[60][2]=-0.18972;
        vertex[60][3]=0;
        vertex[61][0]=-16.095;
        vertex[61][1]=15.9427;
        vertex[61][2]=-0.189722;
        vertex[61][3]=0;
        vertex[62][0]=-11.8147;
        vertex[62][1]=16.7089;
        vertex[62][2]=-26.8564;
        vertex[62][3]=0;
        vertex[63][0]=-0.514736;
        vertex[63][1]=16.7089;
        vertex[63][2]=-26.8564;
        vertex[63][3]=0;
        vertex[64][0]=-0.514736;
        vertex[64][1]=16.7089;
        vertex[64][2]=-0.18972;
        vertex[64][3]=0;
        vertex[65][0]=0.841264;
        vertex[65][1]=16.7089;
        vertex[65][2]=19.1173;
        vertex[65][3]=0;
        vertex[66][0]=3.76555;
        vertex[66][1]=15.9427;
        vertex[66][2]=-0.189722;
        vertex[66][3]=0;
        vertex[67][0]=3.76555;
        vertex[67][1]=15.9427;
        vertex[67][2]=19.1173;
        vertex[67][3]=0;
        vertex[68][0]=10.6174;
        vertex[68][1]=10.2927;
        vertex[68][2]=27.3182;
        vertex[68][3]=0;
        vertex[69][0]=10.6174;
        vertex[69][1]=10.2927;
        vertex[69][2]=-0.189721;
        vertex[69][3]=0;
        vertex[70][0]=3.76555;
        vertex[70][1]=18.4309;
        vertex[70][2]=-26.8564;
        vertex[70][3]=0;
        vertex[71][0]=10.6174;
        vertex[71][1]=12.7809;
        vertex[71][2]=-26.8564;
        vertex[71][3]=0;
        vertex[72][0]=3.76555;
        vertex[72][1]=18.4309;
        vertex[72][2]=-53.5231;
        vertex[72][3]=0;
        vertex[73][0]=10.6174;
        vertex[73][1]=12.7809;
        vertex[73][2]=-53.5231;
        vertex[73][3]=0;
        vertex[74][0]=28.7981;
        vertex[74][1]=6.39185;
        vertex[74][2]=-31.5436;
        vertex[74][3]=0;
        vertex[75][0]=28.7981;
        vertex[75][1]=4.32516;
        vertex[75][2]=-4.87695;
        vertex[75][3]=0;
        vertex[76][0]=32.9937;
        vertex[76][1]=0.646782;
        vertex[76][2]=4.78452;
        vertex[76][3]=0;
        vertex[77][0]=10.6174;
        vertex[77][1]=5.40895;
        vertex[77][2]=11.6621;
        vertex[77][3]=0;
        vertex[78][0]=18.9849;
        vertex[78][1]=2.21856;
        vertex[78][2]=15.6803;
        vertex[78][3]=0;
        vertex[79][0]=44.1818;
        vertex[79][1]=-0.770653;
        vertex[79][2]=-4.89599;
        vertex[79][3]=0;
        vertex[80][0]=38.7875;
        vertex[80][1]=1.89819;
        vertex[80][2]=-10.2037;
        vertex[80][3]=0;
        vertex[81][0]=38.7875;
        vertex[81][1]=2.92128;
        vertex[81][2]=-36.8704;
        vertex[81][3]=0;
        vertex[82][0]=28.7981;
        vertex[82][1]=6.39185;
        vertex[82][2]=-58.2103;
        vertex[82][3]=0;
        vertex[83][0]=38.7875;
        vertex[83][1]=2.92128;
        vertex[83][2]=-63.5371;
        vertex[83][3]=0;
        vertex[84][0]=45.6321;
        vertex[84][1]=0.788272;
        vertex[84][2]=-40.073;
        vertex[84][3]=0;
        vertex[85][0]=45.6321;
        vertex[85][1]=0.406576;
        vertex[85][2]=-13.4063;
        vertex[85][3]=0;
        vertex[86][0]=51.4052;
        vertex[86][1]=-2.26227;
        vertex[86][2]=-13.4063;
        vertex[86][3]=0;
        vertex[87][0]=56.6901;
        vertex[87][1]=-3.02817;
        vertex[87][2]=-40.073;
        vertex[87][3]=0;
        vertex[88][0]=57.8761;
        vertex[88][1]=-4.32476;
        vertex[88][2]=-21.7621;
        vertex[88][3]=0;
        vertex[89][0]=61.7185;
        vertex[89][1]=-5.97753;
        vertex[89][2]=-40.073;
        vertex[89][3]=0;
        vertex[90][0]=68.2051;
        vertex[90][1]=-5.66737;
        vertex[90][2]=-75.8576;
        vertex[90][3]=0;
        vertex[91][0]=74.1547;
        vertex[91][1]=-8.61674;
        vertex[91][2]=-75.8576;
        vertex[91][3]=0;
        vertex[92][0]=45.6321;
        vertex[92][1]=0.788273;
        vertex[92][2]=-66.7396;
        vertex[92][3]=0;
        vertex[93][0]=10.6174;
        vertex[93][1]=11.0589;
        vertex[93][2]=-63.5231;
        vertex[93][3]=0;
        vertex[94][0]=3.76555;
        vertex[94][1]=16.7089;
        vertex[94][2]=-63.5231;
        vertex[94][3]=0;
        vertex[95][0]=10.6174;
        vertex[95][1]=11.0589;
        vertex[95][2]=-68.5231;
        vertex[95][3]=0;
        vertex[96][0]=3.76555;
        vertex[96][1]=16.7089;
        vertex[96][2]=-68.5231;
        vertex[96][3]=0;
        vertex[97][0]=-9.90646;
        vertex[97][1]=13.9592;
        vertex[97][2]=36.4769;
        vertex[97][3]=0;
        vertex[98][0]=-2.42301;
        vertex[98][1]=13.9592;
        vertex[98][2]=36.4769;
        vertex[98][3]=0;
        vertex[99][0]=-9.90646;
        vertex[99][1]=13.6044;
        vertex[99][2]=46.4769;
        vertex[99][3]=0;
        vertex[100][0]=-2.42301;
        vertex[100][1]=13.6044;
        vertex[100][2]=46.4769;
        vertex[100][3]=0;
        vertex[101][0]=-9.90646;
        vertex[101][1]=9.78603;
        vertex[101][2]=56.4073;
        vertex[101][3]=0;
        vertex[102][0]=-2.42301;
        vertex[102][1]=9.78603;
        vertex[102][2]=56.4073;
        vertex[102][3]=0;
        vertex[103][0]=-9.25217;
        vertex[103][1]=4.61148;
        vertex[103][2]=62.3852;
        vertex[103][3]=0;
        vertex[104][0]=-3.0773;
        vertex[104][1]=4.61148;
        vertex[104][2]=62.3852;
        vertex[104][3]=0;
        vertex[105][0]=-0.514736;
        vertex[105][1]=16.7089;
        vertex[105][2]=-53.5231;
        vertex[105][3]=0;
        vertex[106][0]=-0.514736;
        vertex[106][1]=16.7089;
        vertex[106][2]=-63.5231;
        vertex[106][3]=0;
        vertex[107][0]=-0.514736;
        vertex[107][1]=16.7089;
        vertex[107][2]=-68.5231;
        vertex[107][3]=0;
        vertex[108][0]=-3.80949;
        vertex[108][1]=20.538;
        vertex[108][2]=-35.3519;
        vertex[108][3]=0;
        vertex[109][0]=-8.51998;
        vertex[109][1]=20.538;
        vertex[109][2]=-35.3519;
        vertex[109][3]=0;
        vertex[110][0]=-22.9469;
        vertex[110][1]=10.2927;
        vertex[110][2]=-0.189723;
        vertex[110][3]=0;
        vertex[111][0]=-22.9469;
        vertex[111][1]=12.7809;
        vertex[111][2]=-26.8564;
        vertex[111][3]=0;
        vertex[112][0]=-16.095;
        vertex[112][1]=18.4309;
        vertex[112][2]=-26.8564;
        vertex[112][3]=0;
        vertex[113][0]=-22.9469;
        vertex[113][1]=12.7809;
        vertex[113][2]=-53.5231;
        vertex[113][3]=0;
        vertex[114][0]=-16.095;
        vertex[114][1]=18.4309;
        vertex[114][2]=-53.5231;
        vertex[114][3]=0;
        vertex[115][0]=-16.095;
        vertex[115][1]=16.7089;
        vertex[115][2]=-63.5231;
        vertex[115][3]=0;
        vertex[116][0]=-22.9469;
        vertex[116][1]=11.0589;
        vertex[116][2]=-63.5231;
        vertex[116][3]=0;
        vertex[117][0]=-16.095;
        vertex[117][1]=16.7089;
        vertex[117][2]=-68.5231;
        vertex[117][3]=0;
        vertex[118][0]=-22.9469;
        vertex[118][1]=11.0589;
        vertex[118][2]=-68.5231;
        vertex[118][3]=0;
        vertex[119][0]=-41.1276;
        vertex[119][1]=6.39185;
        vertex[119][2]=-58.2103;
        vertex[119][3]=0;
        vertex[120][0]=-41.1276;
        vertex[120][1]=6.39185;
        vertex[120][2]=-31.5436;
        vertex[120][3]=0;
        vertex[121][0]=-41.1276;
        vertex[121][1]=4.32516;
        vertex[121][2]=-4.87695;
        vertex[121][3]=0;
        vertex[122][0]=-22.9469;
        vertex[122][1]=5.40895;
        vertex[122][2]=11.6621;
        vertex[122][3]=0;
        vertex[123][0]=-45.3232;
        vertex[123][1]=0.646782;
        vertex[123][2]=4.78452;
        vertex[123][3]=0;
        vertex[124][0]=-51.117;
        vertex[124][1]=1.89819;
        vertex[124][2]=-10.2037;
        vertex[124][3]=0;
        vertex[125][0]=-56.5113;
        vertex[125][1]=-0.770653;
        vertex[125][2]=-4.89599;
        vertex[125][3]=0;
        vertex[126][0]=-57.9616;
        vertex[126][1]=0.406576;
        vertex[126][2]=-13.4063;
        vertex[126][3]=0;
        vertex[127][0]=-63.7347;
        vertex[127][1]=-2.26227;
        vertex[127][2]=-13.4063;
        vertex[127][3]=0;
        vertex[128][0]=-69.0196;
        vertex[128][1]=-3.02817;
        vertex[128][2]=-40.073;
        vertex[128][3]=0;
        vertex[129][0]=-74.048;
        vertex[129][1]=-5.97753;
        vertex[129][2]=-40.073;
        vertex[129][3]=0;
        vertex[130][0]=-86.4842;
        vertex[130][1]=-8.61674;
        vertex[130][2]=-75.8576;
        vertex[130][3]=0;
        vertex[131][0]=-80.5346;
        vertex[131][1]=-5.66737;
        vertex[131][2]=-75.8576;
        vertex[131][3]=0;
        vertex[132][0]=-57.9616;
        vertex[132][1]=0.788275;
        vertex[132][2]=-40.073;
        vertex[132][3]=0;
        vertex[133][0]=-57.9616;
        vertex[133][1]=0.788273;
        vertex[133][2]=-66.7396;
        vertex[133][3]=0;
        vertex[134][0]=-51.117;
        vertex[134][1]=2.92128;
        vertex[134][2]=-36.8704;
        vertex[134][3]=0;
        vertex[135][0]=-51.117;
        vertex[135][1]=2.92128;
        vertex[135][2]=-63.5371;
        vertex[135][3]=0;
        vertex[136][0]=-70.2055;
        vertex[136][1]=-4.32476;
        vertex[136][2]=-21.7621;
        vertex[136][3]=0;
        vertex[137][0]=-31.3144;
        vertex[137][1]=2.21856;
        vertex[137][2]=15.6803;
        vertex[137][3]=0;
        vertex[138][0]=-22.9469;
        vertex[138][1]=10.2927;
        vertex[138][2]=27.3182;
        vertex[138][3]=0;
        vertex[139][0]=-11.8147;
        vertex[139][1]=11.0589;
        vertex[139][2]=27.3182;
        vertex[139][3]=0;
        vertex[140][0]=-21.1054;
        vertex[140][1]=9.82675;
        vertex[140][2]=32.7505;
        vertex[140][3]=0;
        vertex[141][0]=-13.6563;
        vertex[141][1]=9.82675;
        vertex[141][2]=32.7505;
        vertex[141][3]=0;
        vertex[142][0]=-11.8147;
        vertex[142][1]=16.7089;
        vertex[142][2]=-26.8564;
        vertex[142][3]=0;
        vertex[143][0]=-16.095;
        vertex[143][1]=18.4309;
        vertex[143][2]=-26.8564;
        vertex[143][3]=0;
        vertex[144][0]=-16.095;
        vertex[144][1]=15.9427;
        vertex[144][2]=-0.189722;
        vertex[144][3]=0;
        vertex[145][0]=-11.8147;
        vertex[145][1]=16.7089;
        vertex[145][2]=-53.5231;
        vertex[145][3]=0;
        vertex[146][0]=-16.095;
        vertex[146][1]=18.4309;
        vertex[146][2]=-53.5231;
        vertex[146][3]=0;
        vertex[147][0]=-11.8147;
        vertex[147][1]=16.7089;
        vertex[147][2]=-63.5231;
        vertex[147][3]=0;
        vertex[148][0]=-16.095;
        vertex[148][1]=16.7089;
        vertex[148][2]=-63.5231;
        vertex[148][3]=0;
        vertex[149][0]=-11.8147;
        vertex[149][1]=16.7089;
        vertex[149][2]=-68.5231;
        vertex[149][3]=0;
        vertex[150][0]=-16.095;
        vertex[150][1]=16.7089;
        vertex[150][2]=-68.5231;
        vertex[150][3]=0;
        vertex[151][0]=-7.12774;
        vertex[151][1]=24.1283;
        vertex[151][2]=-33.2442;
        vertex[151][3]=0;
        vertex[152][0]=-5.20173;
        vertex[152][1]=24.1283;
        vertex[152][2]=-33.2442;
        vertex[152][3]=0;
        vertex[153][0]=-3.57619;
        vertex[153][1]=28.6512;
        vertex[153][2]=-58.6156;
        vertex[153][3]=0;
        vertex[154][0]=-8.75328;
        vertex[154][1]=28.6512;
        vertex[154][2]=-58.6156;
        vertex[154][3]=0;
        vertex[155][0]=-5.29023;
        vertex[155][1]=26.6787;
        vertex[155][2]=-76.1802;
        vertex[155][3]=0;
        vertex[156][0]=-7.03924;
        vertex[156][1]=26.6787;
        vertex[156][2]=-76.1802;
        vertex[156][3]=0;
        vertex[157][0]=-21.1054;
        vertex[157][1]=1.6005;
        vertex[157][2]=26.0719;
        vertex[157][3]=0;
        vertex[158][0]=-13.6563;
        vertex[158][1]=1.6005;
        vertex[158][2]=26.0719;
        vertex[158][3]=0;
        vertex[159][0]=-13.6563;
        vertex[159][1]=5.40895;
        vertex[159][2]=27.9173;
        vertex[159][3]=0;
        vertex[160][0]=-21.1054;
        vertex[160][1]=5.40895;
        vertex[160][2]=27.9173;
        vertex[160][3]=0;
        vertex[161][0]=-13.6563;
        vertex[161][1]=9.21739;
        vertex[161][2]=29.7627;
        vertex[161][3]=0;
        vertex[162][0]=-21.1054;
        vertex[162][1]=9.21739;
        vertex[162][2]=29.7627;
        vertex[162][3]=0;
        vertex[163][0]=1.32682;
        vertex[163][1]=1.6005;
        vertex[163][2]=26.0719;
        vertex[163][3]=0;
        vertex[164][0]=8.77589;
        vertex[164][1]=1.6005;
        vertex[164][2]=26.0719;
        vertex[164][3]=0;
        vertex[165][0]=8.77589;
        vertex[165][1]=5.40895;
        vertex[165][2]=27.9173;
        vertex[165][3]=0;
        vertex[166][0]=1.32682;
        vertex[166][1]=5.40895;
        vertex[166][2]=27.9173;
        vertex[166][3]=0;
        vertex[167][0]=8.77589;
        vertex[167][1]=9.21739;
        vertex[167][2]=29.7627;
        vertex[167][3]=0;
        vertex[168][0]=1.32682;
        vertex[168][1]=9.21739;
        vertex[168][2]=29.7627;
        vertex[168][3]=0;
        vertex[169][0]=-8.35466;
        vertex[169][1]=-1.56937;
        vertex[169][2]=76.5126;
        vertex[169][3]=0;
        vertex[170][0]=-3.97481;
        vertex[170][1]=-1.56937;
        vertex[170][2]=76.5126;
        vertex[170][3]=0;
        vertex[171][0]=-3.07731;
        vertex[171][1]=3.57286;
        vertex[171][2]=66.9226;
        vertex[171][3]=0;
        vertex[172][0]=-9.25217;
        vertex[172][1]=3.57286;
        vertex[172][2]=66.9226;
        vertex[172][3]=0;
        vertex[173][0]=-0.514736;
        vertex[173][1]=6.91522;
        vertex[173][2]=46.4769;
        vertex[173][3]=0;
        vertex[174][0]=-11.8147;
        vertex[174][1]=6.91522;
        vertex[174][2]=46.4769;
        vertex[174][3]=0;
        vertex[175][0]=-0.514736;
        vertex[175][1]=11.0589;
        vertex[175][2]=27.3182;
        vertex[175][3]=0;
        vertex[176][0]=-11.8147;
        vertex[176][1]=11.0589;
        vertex[176][2]=27.3182;
        vertex[176][3]=0;
        vertex[177][0]=-0.514736;
        vertex[177][1]=11.0589;
        vertex[177][2]=27.3182;
        vertex[177][3]=0;
        vertex[178][0]=10.6174;
        vertex[178][1]=10.2927;
        vertex[178][2]=27.3182;
        vertex[178][3]=0;
        vertex[179][0]=3.76555;
        vertex[179][1]=15.9427;
        vertex[179][2]=19.1173;
        vertex[179][3]=0;
        vertex[180][0]=0.841264;
        vertex[180][1]=16.7089;
        vertex[180][2]=19.1173;
        vertex[180][3]=0;
        vertex[181][0]=1.32682;
        vertex[181][1]=9.82675;
        vertex[181][2]=32.7505;
        vertex[181][3]=0;
        vertex[182][0]=8.77589;
        vertex[182][1]=9.82675;
        vertex[182][2]=32.7505;
        vertex[182][3]=0;
        vertex[183][0]=10.6174;
        vertex[183][1]=-0.241053;
        vertex[183][2]=23.6274;
        vertex[183][3]=0;
        vertex[184][0]=10.6174;
        vertex[184][1]=-4.39578;
        vertex[184][2]=-0.189721;
        vertex[184][3]=0;
        vertex[185][0]=10.6174;
        vertex[185][1]=5.40895;
        vertex[185][2]=11.6621;
        vertex[185][3]=0;
        vertex[186][0]=10.6174;
        vertex[186][1]=5.40895;
        vertex[186][2]=25.4728;
        vertex[186][3]=0;
        vertex[187][0]=10.6174;
        vertex[187][1]=10.2927;
        vertex[187][2]=-0.189721;
        vertex[187][3]=0;
        vertex[188][0]=10.6174;
        vertex[188][1]=10.2927;
        vertex[188][2]=27.3182;
        vertex[188][3]=0;
        vertex[189][0]=8.77589;
        vertex[189][1]=9.82675;
        vertex[189][2]=32.7505;
        vertex[189][3]=0;
        vertex[190][0]=8.77589;
        vertex[190][1]=5.40895;
        vertex[190][2]=30.9051;
        vertex[190][3]=0;
        vertex[191][0]=8.77589;
        vertex[191][1]=0.991149;
        vertex[191][2]=29.0597;
        vertex[191][3]=0;
        vertex[192][0]=7.69743;
        vertex[192][1]=2.67896;
        vertex[192][2]=-66.547;
        vertex[192][3]=0;
        vertex[193][0]=2.40528;
        vertex[193][1]=2.67896;
        vertex[193][2]=-66.547;
        vertex[193][3]=0;
        vertex[194][0]=2.40528;
        vertex[194][1]=5.40895;
        vertex[194][2]=-66.547;
        vertex[194][3]=0;
        vertex[195][0]=7.69743;
        vertex[195][1]=5.40895;
        vertex[195][2]=-66.547;
        vertex[195][3]=0;
        vertex[196][0]=2.40528;
        vertex[196][1]=11.0589;
        vertex[196][2]=-66.547;
        vertex[196][3]=0;
        vertex[197][0]=7.69743;
        vertex[197][1]=9.68205;
        vertex[197][2]=-66.547;
        vertex[197][3]=0;
        vertex[198][0]=2.40528;
        vertex[198][1]=13.7889;
        vertex[198][2]=-66.547;
        vertex[198][3]=0;
        vertex[199][0]=2.71691;
        vertex[199][1]=13.7889;
        vertex[199][2]=-66.547;
        vertex[199][3]=0;
        vertex[200][0]=-0.514736;
        vertex[200][1]=-0.241053;
        vertex[200][2]=-63.5231;
        vertex[200][3]=0;
        vertex[201][0]=-11.8147;
        vertex[201][1]=-0.241053;
        vertex[201][2]=-63.5231;
        vertex[201][3]=0;
        vertex[202][0]=-11.8147;
        vertex[202][1]=5.40895;
        vertex[202][2]=-61.5006;
        vertex[202][3]=0;
        vertex[203][0]=-0.514736;
        vertex[203][1]=5.40895;
        vertex[203][2]=-61.5006;
        vertex[203][3]=0;
        vertex[204][0]=-11.8147;
        vertex[204][1]=11.0589;
        vertex[204][2]=-61.5006;
        vertex[204][3]=0;
        vertex[205][0]=-0.514736;
        vertex[205][1]=11.0589;
        vertex[205][2]=-61.5006;
        vertex[205][3]=0;
        vertex[206][0]=-11.8147;
        vertex[206][1]=16.7089;
        vertex[206][2]=-63.5231;
        vertex[206][3]=0;
        vertex[207][0]=-0.514736;
        vertex[207][1]=16.7089;
        vertex[207][2]=-63.5231;
        vertex[207][3]=0;
        vertex[208][0]=-9.67405;
        vertex[208][1]=23.7029;
        vertex[208][2]=-66.9128;
        vertex[208][3]=0;
        vertex[209][0]=-2.65542;
        vertex[209][1]=23.7029;
        vertex[209][2]=-66.9128;
        vertex[209][3]=0;
        vertex[210][0]=-14.7348;
        vertex[210][1]=2.67896;
        vertex[210][2]=-66.547;
        vertex[210][3]=0;
        vertex[211][0]=-20.0269;
        vertex[211][1]=2.67896;
        vertex[211][2]=-66.547;
        vertex[211][3]=0;
        vertex[212][0]=-20.0269;
        vertex[212][1]=5.40895;
        vertex[212][2]=-66.547;
        vertex[212][3]=0;
        vertex[213][0]=-14.7348;
        vertex[213][1]=5.40895;
        vertex[213][2]=-66.547;
        vertex[213][3]=0;
        vertex[214][0]=-20.0269;
        vertex[214][1]=9.68205;
        vertex[214][2]=-66.547;
        vertex[214][3]=0;
        vertex[215][0]=-14.7348;
        vertex[215][1]=11.0589;
        vertex[215][2]=-66.547;
        vertex[215][3]=0;
        vertex[216][0]=-15.0464;
        vertex[216][1]=13.7889;
        vertex[216][2]=-66.547;
        vertex[216][3]=0;
        vertex[217][0]=-14.7348;
        vertex[217][1]=13.7889;
        vertex[217][2]=-66.547;
        vertex[217][3]=0;
        vertex[218][0]=-22.9469;
        vertex[218][1]=-4.39578;
        vertex[218][2]=-0.189721;
        vertex[218][3]=0;
        vertex[219][0]=-22.9469;
        vertex[219][1]=-0.241053;
        vertex[219][2]=23.6274;
        vertex[219][3]=0;
        vertex[220][0]=-22.9469;
        vertex[220][1]=5.40895;
        vertex[220][2]=25.4728;
        vertex[220][3]=0;
        vertex[221][0]=-22.9469;
        vertex[221][1]=5.40895;
        vertex[221][2]=11.6621;
        vertex[221][3]=0;
        vertex[222][0]=-22.9469;
        vertex[222][1]=10.2927;
        vertex[222][2]=27.3182;
        vertex[222][3]=0;
        vertex[223][0]=-22.9469;
        vertex[223][1]=10.2927;
        vertex[223][2]=-0.189723;
        vertex[223][3]=0;
        vertex[224][0]=-21.1054;
        vertex[224][1]=5.40895;
        vertex[224][2]=30.9051;
        vertex[224][3]=0;
        vertex[225][0]=-21.1054;
        vertex[225][1]=0.991149;
        vertex[225][2]=29.0597;
        vertex[225][3]=0;
        vertex[226][0]=-21.1054;
        vertex[226][1]=9.82675;
        vertex[226][2]=32.7505;
        vertex[226][3]=0;
        vertex[227][0]=-22.4745;
        vertex[227][1]=-12.2827;
        vertex[227][2]=-26.8098;
        vertex[227][3]=0;
        vertex[228][0]=-22.4745;
        vertex[228][1]=-12.2827;
        vertex[228][2]=-0.143178;
        vertex[228][3]=0;
        vertex[229][0]=-44.8507;
        vertex[229][1]=-13.4573;
        vertex[229][2]=-4.83041;
        vertex[229][3]=0;
        vertex[230][0]=-44.8507;
        vertex[230][1]=-13.8592;
        vertex[230][2]=-31.4971;
        vertex[230][3]=0;
        vertex[231][0]=-24.6205;
        vertex[231][1]=-11.6657;
        vertex[231][2]=3.70692;
        vertex[231][3]=0;
        vertex[232][0]=-43.8664;
        vertex[232][1]=-12.7702;
        vertex[232][2]=-0.700561;
        vertex[232][3]=0;
        vertex[233][0]=10.145;
        vertex[233][1]=-12.2827;
        vertex[233][2]=-0.143178;
        vertex[233][3]=0;
        vertex[234][0]=10.145;
        vertex[234][1]=-12.2827;
        vertex[234][2]=-26.8098;
        vertex[234][3]=0;
        vertex[235][0]=32.5213;
        vertex[235][1]=-13.8592;
        vertex[235][2]=-31.4971;
        vertex[235][3]=0;
        vertex[236][0]=32.5213;
        vertex[236][1]=-13.4573;
        vertex[236][2]=-4.83041;
        vertex[236][3]=0;
        vertex[237][0]=31.537;
        vertex[237][1]=-12.7702;
        vertex[237][2]=-0.700561;
        vertex[237][3]=0;
        vertex[238][0]=12.291;
        vertex[238][1]=-11.6657;
        vertex[238][2]=3.70692;
        vertex[238][3]=0;
        vertex[239][0]=18.9915;
        vertex[239][1]=2.26249;
        vertex[239][2]=21.619;
        vertex[239][3]=0;
        vertex[240][0]=16.6629;
        vertex[240][1]=-0.479548;
        vertex[240][2]=21.6368;
        vertex[240][3]=0;
        vertex[241][0]=19.1863;
        vertex[241][1]=-0.592039;
        vertex[241][2]=21.5772;
        vertex[241][3]=0;
        vertex[242][0]=10.6174;
        vertex[242][1]=-0.241053;
        vertex[242][2]=-53.5231;
        vertex[242][3]=0;
        vertex[243][0]=10.6174;
        vertex[243][1]=5.40895;
        vertex[243][2]=-53.5231;
        vertex[243][3]=0;
        vertex[244][0]=32.9937;
        vertex[244][1]=1.13177;
        vertex[244][2]=-58.2103;
        vertex[244][3]=0;
        vertex[245][0]=32.9937;
        vertex[245][1]=-1.8176;
        vertex[245][2]=-58.2103;
        vertex[245][3]=0;
        vertex[246][0]=44.1818;
        vertex[246][1]=-0.895164;
        vertex[246][2]=-66.7396;
        vertex[246][3]=0;
        vertex[247][0]=44.1818;
        vertex[247][1]=-3.84453;
        vertex[247][2]=-66.7396;
        vertex[247][3]=0;
        vertex[248][0]=68.2051;
        vertex[248][1]=-5.66737;
        vertex[248][2]=-75.8576;
        vertex[248][3]=0;
        vertex[249][0]=45.6321;
        vertex[249][1]=0.788273;
        vertex[249][2]=-66.7396;
        vertex[249][3]=0;
        vertex[250][0]=38.7875;
        vertex[250][1]=2.92128;
        vertex[250][2]=-63.5371;
        vertex[250][3]=0;
        vertex[251][0]=28.7981;
        vertex[251][1]=6.39185;
        vertex[251][2]=-58.2103;
        vertex[251][3]=0;
        vertex[252][0]=10.6174;
        vertex[252][1]=12.7809;
        vertex[252][2]=-53.5231;
        vertex[252][3]=0;
        vertex[253][0]=-22.9469;
        vertex[253][1]=5.40895;
        vertex[253][2]=-53.5231;
        vertex[253][3]=0;
        vertex[254][0]=-22.9469;
        vertex[254][1]=-0.241053;
        vertex[254][2]=-53.5231;
        vertex[254][3]=0;
        vertex[255][0]=-45.3232;
        vertex[255][1]=-1.8176;
        vertex[255][2]=-58.2103;
        vertex[255][3]=0;
        vertex[256][0]=-45.3232;
        vertex[256][1]=1.13177;
        vertex[256][2]=-58.2103;
        vertex[256][3]=0;
        vertex[257][0]=-22.9469;
        vertex[257][1]=12.7809;
        vertex[257][2]=-53.5231;
        vertex[257][3]=0;
        vertex[258][0]=-41.1276;
        vertex[258][1]=6.39185;
        vertex[258][2]=-58.2103;
        vertex[258][3]=0;
        vertex[259][0]=-56.5113;
        vertex[259][1]=-0.895164;
        vertex[259][2]=-66.7396;
        vertex[259][3]=0;
        vertex[260][0]=-56.5113;
        vertex[260][1]=-3.84453;
        vertex[260][2]=-66.7396;
        vertex[260][3]=0;
        vertex[261][0]=-86.4842;
        vertex[261][1]=-8.61674;
        vertex[261][2]=-75.8576;
        vertex[261][3]=0;
        vertex[262][0]=-31.2554;
        vertex[262][1]=2.27183;
        vertex[262][2]=21.6113;
        vertex[262][3]=0;
        vertex[263][0]=-31.4502;
        vertex[263][1]=-0.582697;
        vertex[263][2]=21.5695;
        vertex[263][3]=0;
        vertex[264][0]=-28.9883;
        vertex[264][1]=-0.470206;
        vertex[264][2]=21.6368;
        vertex[264][3]=0;
        vertex[265][0]=32.9937;
        vertex[265][1]=0.646782;
        vertex[265][2]=4.78452;
        vertex[265][3]=0;
        vertex[266][0]=32.9937;
        vertex[266][1]=-5.57044;
        vertex[266][2]=-4.87695;
        vertex[266][3]=0;
        vertex[267][0]=44.1818;
        vertex[267][1]=-2.83315;
        vertex[267][2]=-13.4063;
        vertex[267][3]=0;
        vertex[268][0]=18.9849;
        vertex[268][1]=2.21856;
        vertex[268][2]=15.6803;
        vertex[268][3]=0;
        vertex[269][0]=-56.5113;
        vertex[269][1]=-0.895164;
        vertex[269][2]=-66.7396;
        vertex[269][3]=0;
        vertex[270][0]=-51.117;
        vertex[270][1]=2.92128;
        vertex[270][2]=-63.5371;
        vertex[270][3]=0;
        vertex[271][0]=-41.1276;
        vertex[271][1]=6.39185;
        vertex[271][2]=-58.2103;
        vertex[271][3]=0;
        vertex[272][0]=-80.5346;
        vertex[272][1]=-5.66737;
        vertex[272][2]=-75.8576;
        vertex[272][3]=0;
        vertex[273][0]=57.8761;
        vertex[273][1]=-4.32476;
        vertex[273][2]=-21.7621;
        vertex[273][3]=0;
        vertex[274][0]=51.4052;
        vertex[274][1]=-2.26227;
        vertex[274][2]=-13.4063;
        vertex[274][3]=0;
        vertex[275][0]=44.1818;
        vertex[275][1]=-0.770653;
        vertex[275][2]=-4.89599;
        vertex[275][3]=0;
        vertex[276][0]=68.2051;
        vertex[276][1]=-5.66737;
        vertex[276][2]=-75.8576;
        vertex[276][3]=0;
        vertex[277][0]=74.1547;
        vertex[277][1]=-8.61674;
        vertex[277][2]=-75.8576;
        vertex[277][3]=0;
        vertex[278][0]=44.1818;
        vertex[278][1]=-3.84453;
        vertex[278][2]=-66.7396;
        vertex[278][3]=0;
        vertex[279][0]=-86.4842;
        vertex[279][1]=-8.61674;
        vertex[279][2]=-75.8576;
        vertex[279][3]=0;
        vertex[280][0]=-80.5346;
        vertex[280][1]=-5.66737;
        vertex[280][2]=-75.8576;
        vertex[280][3]=0;
        vertex[281][0]=-56.5113;
        vertex[281][1]=-0.895164;
        vertex[281][2]=-66.7396;
        vertex[281][3]=0;
        vertex[282][0]=-80.5346;
        vertex[282][1]=-5.66737;
        vertex[282][2]=-75.8576;
        vertex[282][3]=0;
        vertex[283][0]=-57.9616;
        vertex[283][1]=0.788273;
        vertex[283][2]=-66.7396;
        vertex[283][3]=0;
        vertex[284][0]=-51.117;
        vertex[284][1]=2.92128;
        vertex[284][2]=-63.5371;
        vertex[284][3]=0;
        vertex[285][0]=-11.8147;
        vertex[285][1]=5.40895;
        vertex[285][2]=25.4728;
        vertex[285][3]=0;
        vertex[286][0]=-11.8147;
        vertex[286][1]=-0.241053;
        vertex[286][2]=23.6274;
        vertex[286][3]=0;
        vertex[287][0]=-9.35683;
        vertex[287][1]=-4.38478;
        vertex[287][2]=46.4769;
        vertex[287][3]=0;
        vertex[288][0]=-11.8147;
        vertex[288][1]=1.26522;
        vertex[288][2]=46.4769;
        vertex[288][3]=0;
        vertex[289][0]=-11.8147;
        vertex[289][1]=11.0589;
        vertex[289][2]=27.3182;
        vertex[289][3]=0;
        vertex[290][0]=-11.8147;
        vertex[290][1]=6.91522;
        vertex[290][2]=46.4769;
        vertex[290][3]=0;
        vertex[291][0]=-8.35466;
        vertex[291][1]=-1.56937;
        vertex[291][2]=76.5126;
        vertex[291][3]=0;
        vertex[292][0]=-8.23454;
        vertex[292][1]=-4.5545;
        vertex[292][2]=66.5352;
        vertex[292][3]=0;
        vertex[293][0]=-9.25217;
        vertex[293][1]=3.57286;
        vertex[293][2]=66.9226;
        vertex[293][3]=0;
        vertex[294][0]=-0.514736;
        vertex[294][1]=-0.241053;
        vertex[294][2]=23.6274;
        vertex[294][3]=0;
        vertex[295][0]=-0.514736;
        vertex[295][1]=5.40895;
        vertex[295][2]=25.4728;
        vertex[295][3]=0;
        vertex[296][0]=-0.514736;
        vertex[296][1]=1.26522;
        vertex[296][2]=46.4769;
        vertex[296][3]=0;
        vertex[297][0]=-2.97265;
        vertex[297][1]=-4.38478;
        vertex[297][2]=46.4769;
        vertex[297][3]=0;
        vertex[298][0]=-3.97481;
        vertex[298][1]=-1.56937;
        vertex[298][2]=76.5126;
        vertex[298][3]=0;
        vertex[299][0]=-4.09493;
        vertex[299][1]=-4.5545;
        vertex[299][2]=66.5352;
        vertex[299][3]=0;
        vertex[300][0]=-3.07731;
        vertex[300][1]=3.57286;
        vertex[300][2]=66.9226;
        vertex[300][3]=0;
        vertex[301][0]=-0.514736;
        vertex[301][1]=6.91522;
        vertex[301][2]=46.4769;
        vertex[301][3]=0;
        vertex[302][0]=-0.514736;
        vertex[302][1]=11.0589;
        vertex[302][2]=27.3182;
        vertex[302][3]=0;
        vertex[303][0]=10.6174;
        vertex[303][1]=5.40895;
        vertex[303][2]=-53.5231;
        vertex[303][3]=0;
        vertex[304][0]=10.6174;
        vertex[304][1]=-0.241053;
        vertex[304][2]=-53.5231;
        vertex[304][3]=0;
        vertex[305][0]=10.6174;
        vertex[305][1]=-0.241053;
        vertex[305][2]=-63.5231;
        vertex[305][3]=0;
        vertex[306][0]=10.6174;
        vertex[306][1]=5.40895;
        vertex[306][2]=-63.5231;
        vertex[306][3]=0;
        vertex[307][0]=10.6174;
        vertex[307][1]=12.7809;
        vertex[307][2]=-53.5231;
        vertex[307][3]=0;
        vertex[308][0]=10.6174;
        vertex[308][1]=11.0589;
        vertex[308][2]=-63.5231;
        vertex[308][3]=0;
        vertex[309][0]=10.6174;
        vertex[309][1]=5.40895;
        vertex[309][2]=-68.5231;
        vertex[309][3]=0;
        vertex[310][0]=10.6174;
        vertex[310][1]=-0.241053;
        vertex[310][2]=-68.5231;
        vertex[310][3]=0;
        vertex[311][0]=10.6174;
        vertex[311][1]=11.0589;
        vertex[311][2]=-68.5231;
        vertex[311][3]=0;
        vertex[312][0]=-22.9469;
        vertex[312][1]=-0.241053;
        vertex[312][2]=-53.5231;
        vertex[312][3]=0;
        vertex[313][0]=-22.9469;
        vertex[313][1]=5.40895;
        vertex[313][2]=-53.5231;
        vertex[313][3]=0;
        vertex[314][0]=-22.9469;
        vertex[314][1]=5.40895;
        vertex[314][2]=-63.5231;
        vertex[314][3]=0;
        vertex[315][0]=-22.9469;
        vertex[315][1]=-0.241053;
        vertex[315][2]=-63.5231;
        vertex[315][3]=0;
        vertex[316][0]=-22.9469;
        vertex[316][1]=5.40895;
        vertex[316][2]=-68.5231;
        vertex[316][3]=0;
        vertex[317][0]=-22.9469;
        vertex[317][1]=-0.241053;
        vertex[317][2]=-68.5231;
        vertex[317][3]=0;
        vertex[318][0]=-22.9469;
        vertex[318][1]=11.0589;
        vertex[318][2]=-68.5231;
        vertex[318][3]=0;
        vertex[319][0]=-22.9469;
        vertex[319][1]=11.0589;
        vertex[319][2]=-63.5231;
        vertex[319][3]=0;
        vertex[320][0]=-22.9469;
        vertex[320][1]=12.7809;
        vertex[320][2]=-53.5231;
        vertex[320][3]=0;
        vertex[321][0]=-0.514736;
        vertex[321][1]=-0.241053;
        vertex[321][2]=-63.5231;
        vertex[321][3]=0;
        vertex[322][0]=-0.514736;
        vertex[322][1]=5.40895;
        vertex[322][2]=-61.5006;
        vertex[322][3]=0;
        vertex[323][0]=-0.514736;
        vertex[323][1]=5.40895;
        vertex[323][2]=-68.5231;
        vertex[323][3]=0;
        vertex[324][0]=-0.514736;
        vertex[324][1]=-0.241053;
        vertex[324][2]=-68.5231;
        vertex[324][3]=0;
        vertex[325][0]=-0.514736;
        vertex[325][1]=11.0589;
        vertex[325][2]=-68.5231;
        vertex[325][3]=0;
        vertex[326][0]=-0.514736;
        vertex[326][1]=11.0589;
        vertex[326][2]=-61.5006;
        vertex[326][3]=0;
        vertex[327][0]=-0.514736;
        vertex[327][1]=16.7089;
        vertex[327][2]=-68.5231;
        vertex[327][3]=0;
        vertex[328][0]=-0.514736;
        vertex[328][1]=16.7089;
        vertex[328][2]=-63.5231;
        vertex[328][3]=0;
        vertex[329][0]=-11.8147;
        vertex[329][1]=5.40895;
        vertex[329][2]=-61.5006;
        vertex[329][3]=0;
        vertex[330][0]=-11.8147;
        vertex[330][1]=-0.241053;
        vertex[330][2]=-63.5231;
        vertex[330][3]=0;
        vertex[331][0]=-11.8147;
        vertex[331][1]=-0.241053;
        vertex[331][2]=-68.5231;
        vertex[331][3]=0;
        vertex[332][0]=-11.8147;
        vertex[332][1]=5.40895;
        vertex[332][2]=-68.5231;
        vertex[332][3]=0;
        vertex[333][0]=-11.8147;
        vertex[333][1]=11.0589;
        vertex[333][2]=-61.5006;
        vertex[333][3]=0;
        vertex[334][0]=-11.8147;
        vertex[334][1]=11.0589;
        vertex[334][2]=-68.5231;
        vertex[334][3]=0;
        vertex[335][0]=-11.8147;
        vertex[335][1]=16.7089;
        vertex[335][2]=-63.5231;
        vertex[335][3]=0;
        vertex[336][0]=-11.8147;
        vertex[336][1]=16.7089;
        vertex[336][2]=-68.5231;
        vertex[336][3]=0;
        vertex[337][0]=-13.1707;
        vertex[337][1]=16.7089;
        vertex[337][2]=19.1173;
        vertex[337][3]=0;
        vertex[338][0]=-11.8147;
        vertex[338][1]=11.0589;
        vertex[338][2]=27.3182;
        vertex[338][3]=0;
        vertex[339][0]=-11.8147;
        vertex[339][1]=9.0153;
        vertex[339][2]=36.4769;
        vertex[339][3]=0;
        vertex[340][0]=-11.8147;
        vertex[340][1]=9.0153;
        vertex[340][2]=36.4769;
        vertex[340][3]=0;
        vertex[341][0]=-9.90646;
        vertex[341][1]=13.9592;
        vertex[341][2]=36.4769;
        vertex[341][3]=0;
        vertex[342][0]=-13.1707;
        vertex[342][1]=16.7089;
        vertex[342][2]=19.1173;
        vertex[342][3]=0;
        vertex[343][0]=-11.8147;
        vertex[343][1]=6.91522;
        vertex[343][2]=46.4769;
        vertex[343][3]=0;
        vertex[344][0]=-9.90646;
        vertex[344][1]=13.6044;
        vertex[344][2]=46.4769;
        vertex[344][3]=0;
        vertex[345][0]=-9.25217;
        vertex[345][1]=4.61148;
        vertex[345][2]=62.3852;
        vertex[345][3]=0;
        vertex[346][0]=-11.8147;
        vertex[346][1]=11.0589;
        vertex[346][2]=27.3182;
        vertex[346][3]=0;
        vertex[347][0]=-0.514736;
        vertex[347][1]=11.0589;
        vertex[347][2]=27.3182;
        vertex[347][3]=0;
        vertex[348][0]=-0.514736;
        vertex[348][1]=9.0153;
        vertex[348][2]=36.4769;
        vertex[348][3]=0;
        vertex[349][0]=-11.8147;
        vertex[349][1]=9.0153;
        vertex[349][2]=36.4769;
        vertex[349][3]=0;
        vertex[350][0]=-0.514736;
        vertex[350][1]=6.91522;
        vertex[350][2]=46.4769;
        vertex[350][3]=0;
        vertex[351][0]=-11.8147;
        vertex[351][1]=6.91522;
        vertex[351][2]=46.4769;
        vertex[351][3]=0;
        vertex[352][0]=-3.0773;
        vertex[352][1]=4.61148;
        vertex[352][2]=62.3852;
        vertex[352][3]=0;
        vertex[353][0]=-9.25217;
        vertex[353][1]=4.61148;
        vertex[353][2]=62.3852;
        vertex[353][3]=0;
        vertex[354][0]=-0.514736;
        vertex[354][1]=11.0589;
        vertex[354][2]=27.3182;
        vertex[354][3]=0;
        vertex[355][0]=0.841264;
        vertex[355][1]=16.7089;
        vertex[355][2]=19.1173;
        vertex[355][3]=0;
        vertex[356][0]=-2.42301;
        vertex[356][1]=13.9592;
        vertex[356][2]=36.4769;
        vertex[356][3]=0;
        vertex[357][0]=-0.514736;
        vertex[357][1]=9.0153;
        vertex[357][2]=36.4769;
        vertex[357][3]=0;
        vertex[358][0]=-2.42301;
        vertex[358][1]=13.6044;
        vertex[358][2]=46.4769;
        vertex[358][3]=0;
        vertex[359][0]=-0.514736;
        vertex[359][1]=6.91522;
        vertex[359][2]=46.4769;
        vertex[359][3]=0;
        vertex[360][0]=-2.42301;
        vertex[360][1]=9.78603;
        vertex[360][2]=56.4073;
        vertex[360][3]=0;
        vertex[361][0]=-3.0773;
        vertex[361][1]=4.61148;
        vertex[361][2]=62.3852;
        vertex[361][3]=0;
        vertex[362][0]=-9.25217;
        vertex[362][1]=4.61148;
        vertex[362][2]=62.3852;
        vertex[362][3]=0;
        vertex[363][0]=-9.90646;
        vertex[363][1]=9.78603;
        vertex[363][2]=56.4073;
        vertex[363][3]=0;
        vertex[364][0]=-9.90646;
        vertex[364][1]=13.6044;
        vertex[364][2]=46.4769;
        vertex[364][3]=0;
        vertex[365][0]=-11.8147;
        vertex[365][1]=16.7089;
        vertex[365][2]=-53.5231;
        vertex[365][3]=0;
        vertex[366][0]=-11.8147;
        vertex[366][1]=16.7089;
        vertex[366][2]=-26.8564;
        vertex[366][3]=0;
        vertex[367][0]=-8.51998;
        vertex[367][1]=20.538;
        vertex[367][2]=-35.3519;
        vertex[367][3]=0;
        vertex[368][0]=-9.67405;
        vertex[368][1]=23.7029;
        vertex[368][2]=-53.523;
        vertex[368][3]=0;
        vertex[369][0]=-11.8147;
        vertex[369][1]=16.7089;
        vertex[369][2]=-63.5231;
        vertex[369][3]=0;
        vertex[370][0]=-9.67405;
        vertex[370][1]=23.7029;
        vertex[370][2]=-66.9128;
        vertex[370][3]=0;
        vertex[371][0]=-8.75328;
        vertex[371][1]=28.6512;
        vertex[371][2]=-58.6156;
        vertex[371][3]=0;
        vertex[372][0]=-7.12774;
        vertex[372][1]=24.1283;
        vertex[372][2]=-33.2442;
        vertex[372][3]=0;
        vertex[373][0]=-7.03924;
        vertex[373][1]=26.6787;
        vertex[373][2]=-76.1802;
        vertex[373][3]=0;
        vertex[374][0]=-0.514736;
        vertex[374][1]=16.7089;
        vertex[374][2]=-26.8564;
        vertex[374][3]=0;
        vertex[375][0]=-0.514736;
        vertex[375][1]=16.7089;
        vertex[375][2]=-53.5231;
        vertex[375][3]=0;
        vertex[376][0]=-2.65542;
        vertex[376][1]=23.7029;
        vertex[376][2]=-53.5231;
        vertex[376][3]=0;
        vertex[377][0]=-2.65542;
        vertex[377][1]=23.7029;
        vertex[377][2]=-66.9128;
        vertex[377][3]=0;
        vertex[378][0]=-0.514736;
        vertex[378][1]=16.7089;
        vertex[378][2]=-63.5231;
        vertex[378][3]=0;
        vertex[379][0]=-5.29023;
        vertex[379][1]=26.6787;
        vertex[379][2]=-76.1802;
        vertex[379][3]=0;
        vertex[380][0]=-2.65542;
        vertex[380][1]=23.7029;
        vertex[380][2]=-53.5231;
        vertex[380][3]=0;
        vertex[381][0]=-3.80949;
        vertex[381][1]=20.538;
        vertex[381][2]=-35.3519;
        vertex[381][3]=0;
        vertex[382][0]=-0.514736;
        vertex[382][1]=16.7089;
        vertex[382][2]=-26.8564;
        vertex[382][3]=0;
        vertex[383][0]=-8.51998;
        vertex[383][1]=20.538;
        vertex[383][2]=-35.3519;
        vertex[383][3]=0;
        vertex[384][0]=-3.80949;
        vertex[384][1]=20.538;
        vertex[384][2]=-35.3519;
        vertex[384][3]=0;
        vertex[385][0]=-5.20173;
        vertex[385][1]=24.1283;
        vertex[385][2]=-33.2442;
        vertex[385][3]=0;
        vertex[386][0]=-7.12774;
        vertex[386][1]=24.1283;
        vertex[386][2]=-33.2442;
        vertex[386][3]=0;
        vertex[387][0]=-3.80949;
        vertex[387][1]=20.538;
        vertex[387][2]=-35.3519;
        vertex[387][3]=0;
        vertex[388][0]=-2.65542;
        vertex[388][1]=23.7029;
        vertex[388][2]=-53.5231;
        vertex[388][3]=0;
        vertex[389][0]=-3.57619;
        vertex[389][1]=28.6512;
        vertex[389][2]=-58.6156;
        vertex[389][3]=0;
        vertex[390][0]=-5.20173;
        vertex[390][1]=24.1283;
        vertex[390][2]=-33.2442;
        vertex[390][3]=0;
        vertex[391][0]=-5.29023;
        vertex[391][1]=26.6787;
        vertex[391][2]=-76.1802;
        vertex[391][3]=0;
        vertex[392][0]=-2.65542;
        vertex[392][1]=23.7029;
        vertex[392][2]=-66.9128;
        vertex[392][3]=0;
        vertex[393][0]=-9.67405;
        vertex[393][1]=23.7029;
        vertex[393][2]=-66.9128;
        vertex[393][3]=0;
        vertex[394][0]=-7.03924;
        vertex[394][1]=26.6787;
        vertex[394][2]=-76.1802;
        vertex[394][3]=0;
        vertex[395][0]=-5.29023;
        vertex[395][1]=26.6787;
        vertex[395][2]=-76.1802;
        vertex[395][3]=0;
        vertex[396][0]=-11.8147;
        vertex[396][1]=-0.241053;
        vertex[396][2]=23.6274;
        vertex[396][3]=0;
        vertex[397][0]=-11.8147;
        vertex[397][1]=5.40895;
        vertex[397][2]=25.4728;
        vertex[397][3]=0;
        vertex[398][0]=-13.6563;
        vertex[398][1]=5.40895;
        vertex[398][2]=30.9051;
        vertex[398][3]=0;
        vertex[399][0]=-13.6563;
        vertex[399][1]=0.991149;
        vertex[399][2]=29.0597;
        vertex[399][3]=0;
        vertex[400][0]=-13.6563;
        vertex[400][1]=9.82675;
        vertex[400][2]=32.7505;
        vertex[400][3]=0;
        vertex[401][0]=-11.8147;
        vertex[401][1]=11.0589;
        vertex[401][2]=27.3182;
        vertex[401][3]=0;
        vertex[402][0]=-0.514736;
        vertex[402][1]=5.40895;
        vertex[402][2]=25.4728;
        vertex[402][3]=0;
        vertex[403][0]=-0.514736;
        vertex[403][1]=-0.241053;
        vertex[403][2]=23.6274;
        vertex[403][3]=0;
        vertex[404][0]=1.32682;
        vertex[404][1]=0.991149;
        vertex[404][2]=29.0597;
        vertex[404][3]=0;
        vertex[405][0]=1.32682;
        vertex[405][1]=5.40895;
        vertex[405][2]=30.9051;
        vertex[405][3]=0;
        vertex[406][0]=-0.514736;
        vertex[406][1]=11.0589;
        vertex[406][2]=27.3182;
        vertex[406][3]=0;
        vertex[407][0]=1.32682;
        vertex[407][1]=9.82675;
        vertex[407][2]=32.7505;
        vertex[407][3]=0;
        vertex[408][0]=-21.1054;
        vertex[408][1]=0.991149;
        vertex[408][2]=29.0597;
        vertex[408][3]=0;
        vertex[409][0]=-13.6563;
        vertex[409][1]=0.991149;
        vertex[409][2]=29.0597;
        vertex[409][3]=0;
        vertex[410][0]=-13.6563;
        vertex[410][1]=1.6005;
        vertex[410][2]=26.0719;
        vertex[410][3]=0;
        vertex[411][0]=-21.1054;
        vertex[411][1]=1.6005;
        vertex[411][2]=26.0719;
        vertex[411][3]=0;
        vertex[412][0]=-13.6563;
        vertex[412][1]=0.991149;
        vertex[412][2]=29.0597;
        vertex[412][3]=0;
        vertex[413][0]=-13.6563;
        vertex[413][1]=5.40895;
        vertex[413][2]=30.9051;
        vertex[413][3]=0;
        vertex[414][0]=-13.6563;
        vertex[414][1]=5.40895;
        vertex[414][2]=27.9173;
        vertex[414][3]=0;
        vertex[415][0]=-13.6563;
        vertex[415][1]=1.6005;
        vertex[415][2]=26.0719;
        vertex[415][3]=0;
        vertex[416][0]=-13.6563;
        vertex[416][1]=9.21739;
        vertex[416][2]=29.7627;
        vertex[416][3]=0;
        vertex[417][0]=-13.6563;
        vertex[417][1]=9.82675;
        vertex[417][2]=32.7505;
        vertex[417][3]=0;
        vertex[418][0]=-21.1054;
        vertex[418][1]=5.40895;
        vertex[418][2]=30.9051;
        vertex[418][3]=0;
        vertex[419][0]=-21.1054;
        vertex[419][1]=0.991149;
        vertex[419][2]=29.0597;
        vertex[419][3]=0;
        vertex[420][0]=-21.1054;
        vertex[420][1]=1.6005;
        vertex[420][2]=26.0719;
        vertex[420][3]=0;
        vertex[421][0]=-21.1054;
        vertex[421][1]=5.40895;
        vertex[421][2]=27.9173;
        vertex[421][3]=0;
        vertex[422][0]=-21.1054;
        vertex[422][1]=9.82675;
        vertex[422][2]=32.7505;
        vertex[422][3]=0;
        vertex[423][0]=-21.1054;
        vertex[423][1]=9.21739;
        vertex[423][2]=29.7627;
        vertex[423][3]=0;
        vertex[424][0]=1.32682;
        vertex[424][1]=0.991149;
        vertex[424][2]=29.0597;
        vertex[424][3]=0;
        vertex[425][0]=8.77589;
        vertex[425][1]=0.991149;
        vertex[425][2]=29.0597;
        vertex[425][3]=0;
        vertex[426][0]=8.77589;
        vertex[426][1]=1.6005;
        vertex[426][2]=26.0719;
        vertex[426][3]=0;
        vertex[427][0]=1.32682;
        vertex[427][1]=1.6005;
        vertex[427][2]=26.0719;
        vertex[427][3]=0;
        vertex[428][0]=8.77589;
        vertex[428][1]=0.991149;
        vertex[428][2]=29.0597;
        vertex[428][3]=0;
        vertex[429][0]=8.77589;
        vertex[429][1]=5.40895;
        vertex[429][2]=30.9051;
        vertex[429][3]=0;
        vertex[430][0]=8.77589;
        vertex[430][1]=5.40895;
        vertex[430][2]=27.9173;
        vertex[430][3]=0;
        vertex[431][0]=8.77589;
        vertex[431][1]=1.6005;
        vertex[431][2]=26.0719;
        vertex[431][3]=0;
        vertex[432][0]=8.77589;
        vertex[432][1]=9.21739;
        vertex[432][2]=29.7627;
        vertex[432][3]=0;
        vertex[433][0]=8.77589;
        vertex[433][1]=9.82675;
        vertex[433][2]=32.7505;
        vertex[433][3]=0;
        vertex[434][0]=1.32682;
        vertex[434][1]=5.40895;
        vertex[434][2]=30.9051;
        vertex[434][3]=0;
        vertex[435][0]=1.32682;
        vertex[435][1]=0.991149;
        vertex[435][2]=29.0597;
        vertex[435][3]=0;
        vertex[436][0]=1.32682;
        vertex[436][1]=1.6005;
        vertex[436][2]=26.0719;
        vertex[436][3]=0;
        vertex[437][0]=1.32682;
        vertex[437][1]=5.40895;
        vertex[437][2]=27.9173;
        vertex[437][3]=0;
        vertex[438][0]=1.32682;
        vertex[438][1]=9.82675;
        vertex[438][2]=32.7505;
        vertex[438][3]=0;
        vertex[439][0]=1.32682;
        vertex[439][1]=9.21739;
        vertex[439][2]=29.7627;
        vertex[439][3]=0;
        vertex[440][0]=-13.6563;
        vertex[440][1]=9.82675;
        vertex[440][2]=32.7505;
        vertex[440][3]=0;
        vertex[441][0]=-21.1054;
        vertex[441][1]=9.82675;
        vertex[441][2]=32.7505;
        vertex[441][3]=0;
        vertex[442][0]=-21.1054;
        vertex[442][1]=9.21739;
        vertex[442][2]=29.7627;
        vertex[442][3]=0;
        vertex[443][0]=-13.6563;
        vertex[443][1]=9.21739;
        vertex[443][2]=29.7627;
        vertex[443][3]=0;
        vertex[444][0]=8.77589;
        vertex[444][1]=9.82675;
        vertex[444][2]=32.7505;
        vertex[444][3]=0;
        vertex[445][0]=1.32682;
        vertex[445][1]=9.82675;
        vertex[445][2]=32.7505;
        vertex[445][3]=0;
        vertex[446][0]=1.32682;
        vertex[446][1]=9.21739;
        vertex[446][2]=29.7627;
        vertex[446][3]=0;
        vertex[447][0]=8.77589;
        vertex[447][1]=9.21739;
        vertex[447][2]=29.7627;
        vertex[447][3]=0;
        vertex[448][0]=10.6174;
        vertex[448][1]=-0.241053;
        vertex[448][2]=-68.5231;
        vertex[448][3]=0;
        vertex[449][0]=-0.514736;
        vertex[449][1]=-0.241053;
        vertex[449][2]=-68.5231;
        vertex[449][3]=0;
        vertex[450][0]=2.40528;
        vertex[450][1]=2.67896;
        vertex[450][2]=-66.547;
        vertex[450][3]=0;
        vertex[451][0]=7.69743;
        vertex[451][1]=2.67896;
        vertex[451][2]=-66.547;
        vertex[451][3]=0;
        vertex[452][0]=-0.514736;
        vertex[452][1]=-0.241053;
        vertex[452][2]=-68.5231;
        vertex[452][3]=0;
        vertex[453][0]=-0.514736;
        vertex[453][1]=5.40895;
        vertex[453][2]=-68.5231;
        vertex[453][3]=0;
        vertex[454][0]=2.40528;
        vertex[454][1]=5.40895;
        vertex[454][2]=-66.547;
        vertex[454][3]=0;
        vertex[455][0]=2.40528;
        vertex[455][1]=2.67896;
        vertex[455][2]=-66.547;
        vertex[455][3]=0;
        vertex[456][0]=2.40528;
        vertex[456][1]=11.0589;
        vertex[456][2]=-66.547;
        vertex[456][3]=0;
        vertex[457][0]=-0.514736;
        vertex[457][1]=11.0589;
        vertex[457][2]=-68.5231;
        vertex[457][3]=0;
        vertex[458][0]=2.40528;
        vertex[458][1]=13.7889;
        vertex[458][2]=-66.547;
        vertex[458][3]=0;
        vertex[459][0]=-0.514736;
        vertex[459][1]=16.7089;
        vertex[459][2]=-68.5231;
        vertex[459][3]=0;
        vertex[460][0]=10.6174;
        vertex[460][1]=5.40895;
        vertex[460][2]=-68.5231;
        vertex[460][3]=0;
        vertex[461][0]=10.6174;
        vertex[461][1]=-0.241053;
        vertex[461][2]=-68.5231;
        vertex[461][3]=0;
        vertex[462][0]=7.69743;
        vertex[462][1]=2.67896;
        vertex[462][2]=-66.547;
        vertex[462][3]=0;
        vertex[463][0]=7.69743;
        vertex[463][1]=5.40895;
        vertex[463][2]=-66.547;
        vertex[463][3]=0;
        vertex[464][0]=10.6174;
        vertex[464][1]=11.0589;
        vertex[464][2]=-68.5231;
        vertex[464][3]=0;
        vertex[465][0]=7.69743;
        vertex[465][1]=9.68205;
        vertex[465][2]=-66.547;
        vertex[465][3]=0;
        vertex[466][0]=-11.8147;
        vertex[466][1]=-0.241053;
        vertex[466][2]=-68.5231;
        vertex[466][3]=0;
        vertex[467][0]=-22.9469;
        vertex[467][1]=-0.241053;
        vertex[467][2]=-68.5231;
        vertex[467][3]=0;
        vertex[468][0]=-20.0269;
        vertex[468][1]=2.67896;
        vertex[468][2]=-66.547;
        vertex[468][3]=0;
        vertex[469][0]=-14.7348;
        vertex[469][1]=2.67896;
        vertex[469][2]=-66.547;
        vertex[469][3]=0;
        vertex[470][0]=-22.9469;
        vertex[470][1]=-0.241053;
        vertex[470][2]=-68.5231;
        vertex[470][3]=0;
        vertex[471][0]=-22.9469;
        vertex[471][1]=5.40895;
        vertex[471][2]=-68.5231;
        vertex[471][3]=0;
        vertex[472][0]=-20.0269;
        vertex[472][1]=5.40895;
        vertex[472][2]=-66.547;
        vertex[472][3]=0;
        vertex[473][0]=-20.0269;
        vertex[473][1]=2.67896;
        vertex[473][2]=-66.547;
        vertex[473][3]=0;
        vertex[474][0]=-20.0269;
        vertex[474][1]=9.68205;
        vertex[474][2]=-66.547;
        vertex[474][3]=0;
        vertex[475][0]=-22.9469;
        vertex[475][1]=11.0589;
        vertex[475][2]=-68.5231;
        vertex[475][3]=0;
        vertex[476][0]=-11.8147;
        vertex[476][1]=5.40895;
        vertex[476][2]=-68.5231;
        vertex[476][3]=0;
        vertex[477][0]=-11.8147;
        vertex[477][1]=-0.241053;
        vertex[477][2]=-68.5231;
        vertex[477][3]=0;
        vertex[478][0]=-14.7348;
        vertex[478][1]=2.67896;
        vertex[478][2]=-66.547;
        vertex[478][3]=0;
        vertex[479][0]=-14.7348;
        vertex[479][1]=5.40895;
        vertex[479][2]=-66.547;
        vertex[479][3]=0;
        vertex[480][0]=-11.8147;
        vertex[480][1]=11.0589;
        vertex[480][2]=-68.5231;
        vertex[480][3]=0;
        vertex[481][0]=-14.7348;
        vertex[481][1]=11.0589;
        vertex[481][2]=-66.547;
        vertex[481][3]=0;
        vertex[482][0]=-11.8147;
        vertex[482][1]=16.7089;
        vertex[482][2]=-68.5231;
        vertex[482][3]=0;
        vertex[483][0]=-14.7348;
        vertex[483][1]=13.7889;
        vertex[483][2]=-66.547;
        vertex[483][3]=0;
        vertex[484][0]=-0.514736;
        vertex[484][1]=16.7089;
        vertex[484][2]=-68.5231;
        vertex[484][3]=0;
        vertex[485][0]=3.76555;
        vertex[485][1]=16.7089;
        vertex[485][2]=-68.5231;
        vertex[485][3]=0;
        vertex[486][0]=2.71691;
        vertex[486][1]=13.7889;
        vertex[486][2]=-66.547;
        vertex[486][3]=0;
        vertex[487][0]=2.40528;
        vertex[487][1]=13.7889;
        vertex[487][2]=-66.547;
        vertex[487][3]=0;
        vertex[488][0]=7.69743;
        vertex[488][1]=9.68205;
        vertex[488][2]=-66.547;
        vertex[488][3]=0;
        vertex[489][0]=10.6174;
        vertex[489][1]=11.0589;
        vertex[489][2]=-68.5231;
        vertex[489][3]=0;
        vertex[490][0]=-22.9469;
        vertex[490][1]=11.0589;
        vertex[490][2]=-68.5231;
        vertex[490][3]=0;
        vertex[491][0]=-16.095;
        vertex[491][1]=16.7089;
        vertex[491][2]=-68.5231;
        vertex[491][3]=0;
        vertex[492][0]=-15.0464;
        vertex[492][1]=13.7889;
        vertex[492][2]=-66.547;
        vertex[492][3]=0;
        vertex[493][0]=-20.0269;
        vertex[493][1]=9.68205;
        vertex[493][2]=-66.547;
        vertex[493][3]=0;
        vertex[494][0]=-14.7348;
        vertex[494][1]=13.7889;
        vertex[494][2]=-66.547;
        vertex[494][3]=0;
        vertex[495][0]=-11.8147;
        vertex[495][1]=16.7089;
        vertex[495][2]=-68.5231;
        vertex[495][3]=0;
        vertex[496][0]=10.6174;
        vertex[496][1]=5.40895;
        vertex[496][2]=11.6621;
        vertex[496][3]=0;
        vertex[497][0]=10.6174;
        vertex[497][1]=-4.39578;
        vertex[497][2]=-0.189721;
        vertex[497][3]=0;
        vertex[498][0]=16.6686;
        vertex[498][1]=-0.447307;
        vertex[498][2]=15.2711;
        vertex[498][3]=0;
        vertex[499][0]=16.6686;
        vertex[499][1]=-0.447307;
        vertex[499][2]=15.2711;
        vertex[499][3]=0;
        vertex[500][0]=18.9849;
        vertex[500][1]=2.21856;
        vertex[500][2]=15.6803;
        vertex[500][3]=0;
        vertex[501][0]=10.6174;
        vertex[501][1]=5.40895;
        vertex[501][2]=11.6621;
        vertex[501][3]=0;
        vertex[502][0]=-22.9469;
        vertex[502][1]=-4.39578;
        vertex[502][2]=-0.189721;
        vertex[502][3]=0;
        vertex[503][0]=-22.9469;
        vertex[503][1]=5.40895;
        vertex[503][2]=11.6621;
        vertex[503][3]=0;
        vertex[504][0]=-31.3144;
        vertex[504][1]=2.21856;
        vertex[504][2]=15.6803;
        vertex[504][3]=0;
        vertex[505][0]=-31.3144;
        vertex[505][1]=2.21856;
        vertex[505][2]=15.6803;
        vertex[505][3]=0;
        vertex[506][0]=-28.9981;
        vertex[506][1]=-0.447307;
        vertex[506][2]=15.2711;
        vertex[506][3]=0;
        vertex[507][0]=-22.9469;
        vertex[507][1]=-4.39578;
        vertex[507][2]=-0.189721;
        vertex[507][3]=0;
        vertex[508][0]=-31.2554;
        vertex[508][1]=2.27183;
        vertex[508][2]=21.6113;
        vertex[508][3]=0;
        vertex[509][0]=-28.9883;
        vertex[509][1]=-0.470206;
        vertex[509][2]=21.6368;
        vertex[509][3]=0;
        vertex[510][0]=-45.3232;
        vertex[510][1]=-5.57043;
        vertex[510][2]=-4.87695;
        vertex[510][3]=0;
        vertex[511][0]=-22.9469;
        vertex[511][1]=-4.39578;
        vertex[511][2]=-0.189721;
        vertex[511][3]=0;
        vertex[512][0]=-28.9981;
        vertex[512][1]=-0.447307;
        vertex[512][2]=15.2711;
        vertex[512][3]=0;
        vertex[513][0]=-31.4688;
        vertex[513][1]=-0.556674;
        vertex[513][2]=15.6396;
        vertex[513][3]=0;
        vertex[514][0]=-28.9883;
        vertex[514][1]=-0.470206;
        vertex[514][2]=21.6368;
        vertex[514][3]=0;
        vertex[515][0]=-31.4502;
        vertex[515][1]=-0.582697;
        vertex[515][2]=21.5695;
        vertex[515][3]=0;
        vertex[516][0]=10.6174;
        vertex[516][1]=-4.39578;
        vertex[516][2]=-0.189721;
        vertex[516][3]=0;
        vertex[517][0]=32.9937;
        vertex[517][1]=-5.57044;
        vertex[517][2]=-4.87695;
        vertex[517][3]=0;
        vertex[518][0]=19.1393;
        vertex[518][1]=-0.556674;
        vertex[518][2]=15.6396;
        vertex[518][3]=0;
        vertex[519][0]=16.6686;
        vertex[519][1]=-0.447307;
        vertex[519][2]=15.2711;
        vertex[519][3]=0;
        vertex[520][0]=19.1863;
        vertex[520][1]=-0.592039;
        vertex[520][2]=21.5772;
        vertex[520][3]=0;
        vertex[521][0]=16.6629;
        vertex[521][1]=-0.479548;
        vertex[521][2]=21.6368;
        vertex[521][3]=0;
        vertex[522][0]=18.9849;
        vertex[522][1]=2.21856;
        vertex[522][2]=15.6803;
        vertex[522][3]=0;
        vertex[523][0]=19.1393;
        vertex[523][1]=-0.556674;
        vertex[523][2]=15.6396;
        vertex[523][3]=0;
        vertex[524][0]=32.9937;
        vertex[524][1]=-5.57044;
        vertex[524][2]=-4.87695;
        vertex[524][3]=0;
        vertex[525][0]=-31.4688;
        vertex[525][1]=-0.556674;
        vertex[525][2]=15.6396;
        vertex[525][3]=0;
        vertex[526][0]=-31.3144;
        vertex[526][1]=2.21856;
        vertex[526][2]=15.6803;
        vertex[526][3]=0;
        vertex[527][0]=-45.3232;
        vertex[527][1]=0.646782;
        vertex[527][2]=4.78452;
        vertex[527][3]=0;
        vertex[528][0]=18.9849;
        vertex[528][1]=2.21856;
        vertex[528][2]=15.6803;
        vertex[528][3]=0;
        vertex[529][0]=16.6686;
        vertex[529][1]=-0.447307;
        vertex[529][2]=15.2711;
        vertex[529][3]=0;
        vertex[530][0]=16.6629;
        vertex[530][1]=-0.479548;
        vertex[530][2]=21.6368;
        vertex[530][3]=0;
        vertex[531][0]=18.9915;
        vertex[531][1]=2.26249;
        vertex[531][2]=21.619;
        vertex[531][3]=0;
        vertex[532][0]=19.1393;
        vertex[532][1]=-0.556674;
        vertex[532][2]=15.6396;
        vertex[532][3]=0;
        vertex[533][0]=18.9849;
        vertex[533][1]=2.21856;
        vertex[533][2]=15.6803;
        vertex[533][3]=0;
        vertex[534][0]=18.9915;
        vertex[534][1]=2.26249;
        vertex[534][2]=21.619;
        vertex[534][3]=0;
        vertex[535][0]=19.1863;
        vertex[535][1]=-0.592039;
        vertex[535][2]=21.5772;
        vertex[535][3]=0;
        vertex[536][0]=-31.3144;
        vertex[536][1]=2.21856;
        vertex[536][2]=15.6803;
        vertex[536][3]=0;
        vertex[537][0]=-31.4688;
        vertex[537][1]=-0.556674;
        vertex[537][2]=15.6396;
        vertex[537][3]=0;
        vertex[538][0]=-31.4502;
        vertex[538][1]=-0.582697;
        vertex[538][2]=21.5695;
        vertex[538][3]=0;
        vertex[539][0]=-31.2554;
        vertex[539][1]=2.27183;
        vertex[539][2]=21.6113;
        vertex[539][3]=0;
        vertex[540][0]=-22.9469;
        vertex[540][1]=-4.39578;
        vertex[540][2]=-26.8564;
        vertex[540][3]=0;
        vertex[541][0]=-22.9469;
        vertex[541][1]=-4.39578;
        vertex[541][2]=-0.189721;
        vertex[541][3]=0;
        vertex[542][0]=-22.4745;
        vertex[542][1]=-12.2827;
        vertex[542][2]=-0.143178;
        vertex[542][3]=0;
        vertex[543][0]=-22.4745;
        vertex[543][1]=-12.2827;
        vertex[543][2]=-26.8098;
        vertex[543][3]=0;
        vertex[544][0]=-24.9379;
        vertex[544][1]=-5.15046;
        vertex[544][2]=3.66847;
        vertex[544][3]=0;
        vertex[545][0]=-24.6205;
        vertex[545][1]=-11.6657;
        vertex[545][2]=3.70692;
        vertex[545][3]=0;
        vertex[546][0]=10.6174;
        vertex[546][1]=-4.39578;
        vertex[546][2]=-0.189721;
        vertex[546][3]=0;
        vertex[547][0]=10.6174;
        vertex[547][1]=-4.39578;
        vertex[547][2]=-26.8564;
        vertex[547][3]=0;
        vertex[548][0]=10.145;
        vertex[548][1]=-12.2827;
        vertex[548][2]=-26.8098;
        vertex[548][3]=0;
        vertex[549][0]=10.145;
        vertex[549][1]=-12.2827;
        vertex[549][2]=-0.143178;
        vertex[549][3]=0;
        vertex[550][0]=12.291;
        vertex[550][1]=-11.6657;
        vertex[550][2]=3.70692;
        vertex[550][3]=0;
        vertex[551][0]=12.6084;
        vertex[551][1]=-5.15046;
        vertex[551][2]=3.66847;
        vertex[551][3]=0;
        vertex[552][0]=-24.9379;
        vertex[552][1]=-5.15046;
        vertex[552][2]=3.66847;
        vertex[552][3]=0;
        vertex[553][0]=-44.2029;
        vertex[553][1]=-6.25501;
        vertex[553][2]=-0.739009;
        vertex[553][3]=0;
        vertex[554][0]=-43.8664;
        vertex[554][1]=-12.7702;
        vertex[554][2]=-0.700561;
        vertex[554][3]=0;
        vertex[555][0]=-24.6205;
        vertex[555][1]=-11.6657;
        vertex[555][2]=3.70692;
        vertex[555][3]=0;
        vertex[556][0]=-45.3232;
        vertex[556][1]=-5.57043;
        vertex[556][2]=-4.87695;
        vertex[556][3]=0;
        vertex[557][0]=-45.3232;
        vertex[557][1]=-5.97232;
        vertex[557][2]=-31.5436;
        vertex[557][3]=0;
        vertex[558][0]=-44.8507;
        vertex[558][1]=-13.8592;
        vertex[558][2]=-31.4971;
        vertex[558][3]=0;
        vertex[559][0]=-44.8507;
        vertex[559][1]=-13.4573;
        vertex[559][2]=-4.83041;
        vertex[559][3]=0;
        vertex[560][0]=-43.8664;
        vertex[560][1]=-12.7702;
        vertex[560][2]=-0.700561;
        vertex[560][3]=0;
        vertex[561][0]=-44.2029;
        vertex[561][1]=-6.25501;
        vertex[561][2]=-0.739009;
        vertex[561][3]=0;
        vertex[562][0]=-45.3232;
        vertex[562][1]=-5.97232;
        vertex[562][2]=-31.5436;
        vertex[562][3]=0;
        vertex[563][0]=-22.9469;
        vertex[563][1]=-4.39578;
        vertex[563][2]=-26.8564;
        vertex[563][3]=0;
        vertex[564][0]=-22.4745;
        vertex[564][1]=-12.2827;
        vertex[564][2]=-26.8098;
        vertex[564][3]=0;
        vertex[565][0]=-44.8507;
        vertex[565][1]=-13.8592;
        vertex[565][2]=-31.4971;
        vertex[565][3]=0;
        vertex[566][0]=10.6174;
        vertex[566][1]=-4.39578;
        vertex[566][2]=-26.8564;
        vertex[566][3]=0;
        vertex[567][0]=32.9937;
        vertex[567][1]=-5.97232;
        vertex[567][2]=-31.5436;
        vertex[567][3]=0;
        vertex[568][0]=32.5213;
        vertex[568][1]=-13.8592;
        vertex[568][2]=-31.4971;
        vertex[568][3]=0;
        vertex[569][0]=10.145;
        vertex[569][1]=-12.2827;
        vertex[569][2]=-26.8098;
        vertex[569][3]=0;
        vertex[570][0]=32.9937;
        vertex[570][1]=-5.97232;
        vertex[570][2]=-31.5436;
        vertex[570][3]=0;
        vertex[571][0]=32.9937;
        vertex[571][1]=-5.57044;
        vertex[571][2]=-4.87695;
        vertex[571][3]=0;
        vertex[572][0]=32.5213;
        vertex[572][1]=-13.4573;
        vertex[572][2]=-4.83041;
        vertex[572][3]=0;
        vertex[573][0]=32.5213;
        vertex[573][1]=-13.8592;
        vertex[573][2]=-31.4971;
        vertex[573][3]=0;
        vertex[574][0]=31.8734;
        vertex[574][1]=-6.25501;
        vertex[574][2]=-0.739009;
        vertex[574][3]=0;
        vertex[575][0]=31.537;
        vertex[575][1]=-12.7702;
        vertex[575][2]=-0.700561;
        vertex[575][3]=0;
        vertex[576][0]=31.8734;
        vertex[576][1]=-6.25501;
        vertex[576][2]=-0.739009;
        vertex[576][3]=0;
        vertex[577][0]=12.6084;
        vertex[577][1]=-5.15046;
        vertex[577][2]=3.66847;
        vertex[577][3]=0;
        vertex[578][0]=12.291;
        vertex[578][1]=-11.6657;
        vertex[578][2]=3.70692;
        vertex[578][3]=0;
        vertex[579][0]=31.537;
        vertex[579][1]=-12.7702;
        vertex[579][2]=-0.700561;
        vertex[579][3]=0;
        vertex[580][0]=-22.9469;
        vertex[580][1]=-4.39578;
        vertex[580][2]=-0.189721;
        vertex[580][3]=0;
        vertex[581][0]=-45.3232;
        vertex[581][1]=-5.57043;
        vertex[581][2]=-4.87695;
        vertex[581][3]=0;
        vertex[582][0]=-44.2029;
        vertex[582][1]=-6.25501;
        vertex[582][2]=-0.739009;
        vertex[582][3]=0;
        vertex[583][0]=-24.9379;
        vertex[583][1]=-5.15046;
        vertex[583][2]=3.66847;
        vertex[583][3]=0;
        vertex[584][0]=32.9937;
        vertex[584][1]=-5.57044;
        vertex[584][2]=-4.87695;
        vertex[584][3]=0;
        vertex[585][0]=10.6174;
        vertex[585][1]=-4.39578;
        vertex[585][2]=-0.189721;
        vertex[585][3]=0;
        vertex[586][0]=12.6084;
        vertex[586][1]=-5.15046;
        vertex[586][2]=3.66847;
        vertex[586][3]=0;
        vertex[587][0]=31.8734;
        vertex[587][1]=-6.25501;
        vertex[587][2]=-0.739009;
        vertex[587][3]=0;

        indices[0]=0;
        indices[1]=1;
        indices[2]=2;
        indices[3]=2;
        indices[4]=3;
        indices[5]=0;
        indices[6]=3;
        indices[7]=2;
        indices[8]=4;
        indices[9]=4;
        indices[10]=5;
        indices[11]=3;
        indices[12]=5;
        indices[13]=4;
        indices[14]=6;
        indices[15]=6;
        indices[16]=7;
        indices[17]=5;
        indices[18]=5;
        indices[19]=7;
        indices[20]=8;
        indices[21]=8;
        indices[22]=9;
        indices[23]=5;
        indices[24]=10;
        indices[25]=6;
        indices[26]=4;
        indices[27]=4;
        indices[28]=11;
        indices[29]=10;
        indices[30]=11;
        indices[31]=4;
        indices[32]=2;
        indices[33]=2;
        indices[34]=12;
        indices[35]=11;
        indices[36]=12;
        indices[37]=2;
        indices[38]=1;
        indices[39]=1;
        indices[40]=13;
        indices[41]=12;
        indices[42]=14;
        indices[43]=12;
        indices[44]=13;
        indices[45]=13;
        indices[46]=15;
        indices[47]=14;
        indices[48]=15;
        indices[49]=13;
        indices[50]=16;
        indices[51]=16;
        indices[52]=17;
        indices[53]=15;
        indices[54]=17;
        indices[55]=16;
        indices[56]=18;
        indices[57]=18;
        indices[58]=19;
        indices[59]=17;
        indices[60]=19;
        indices[61]=18;
        indices[62]=20;
        indices[63]=20;
        indices[64]=21;
        indices[65]=19;
        indices[66]=22;
        indices[67]=20;
        indices[68]=18;
        indices[69]=18;
        indices[70]=23;
        indices[71]=22;
        indices[72]=23;
        indices[73]=18;
        indices[74]=16;
        indices[75]=16;
        indices[76]=24;
        indices[77]=23;
        indices[78]=25;
        indices[79]=23;
        indices[80]=24;
        indices[81]=24;
        indices[82]=26;
        indices[83]=25;
        indices[84]=26;
        indices[85]=24;
        indices[86]=27;
        indices[87]=23;
        indices[88]=25;
        indices[89]=28;
        indices[90]=28;
        indices[91]=22;
        indices[92]=23;
        indices[93]=14;
        indices[94]=15;
        indices[95]=29;
        indices[96]=29;
        indices[97]=30;
        indices[98]=14;
        indices[99]=31;
        indices[100]=14;
        indices[101]=30;
        indices[102]=12;
        indices[103]=14;
        indices[104]=31;
        indices[105]=31;
        indices[106]=11;
        indices[107]=12;
        indices[108]=11;
        indices[109]=31;
        indices[110]=32;
        indices[111]=32;
        indices[112]=10;
        indices[113]=11;
        indices[114]=10;
        indices[115]=32;
        indices[116]=33;
        indices[117]=33;
        indices[118]=34;
        indices[119]=10;
        indices[120]=34;
        indices[121]=33;
        indices[122]=35;
        indices[123]=35;
        indices[124]=36;
        indices[125]=34;
        indices[126]=37;
        indices[127]=34;
        indices[128]=36;
        indices[129]=36;
        indices[130]=38;
        indices[131]=37;
        indices[132]=38;
        indices[133]=36;
        indices[134]=39;
        indices[135]=39;
        indices[136]=40;
        indices[137]=38;
        indices[138]=41;
        indices[139]=38;
        indices[140]=40;
        indices[141]=38;
        indices[142]=41;
        indices[143]=42;
        indices[144]=43;
        indices[145]=39;
        indices[146]=36;
        indices[147]=36;
        indices[148]=35;
        indices[149]=43;
        indices[150]=32;
        indices[151]=31;
        indices[152]=44;
        indices[153]=30;
        indices[154]=44;
        indices[155]=31;
        indices[156]=44;
        indices[157]=45;
        indices[158]=32;
        indices[159]=45;
        indices[160]=44;
        indices[161]=46;
        indices[162]=46;
        indices[163]=47;
        indices[164]=45;
        indices[165]=30;
        indices[166]=29;
        indices[167]=48;
        indices[168]=48;
        indices[169]=49;
        indices[170]=30;
        indices[171]=3;
        indices[172]=5;
        indices[173]=50;
        indices[174]=50;
        indices[175]=51;
        indices[176]=3;
        indices[177]=51;
        indices[178]=50;
        indices[179]=52;
        indices[180]=52;
        indices[181]=53;
        indices[182]=51;
        indices[183]=53;
        indices[184]=52;
        indices[185]=54;
        indices[186]=54;
        indices[187]=55;
        indices[188]=53;
        indices[189]=0;
        indices[190]=3;
        indices[191]=56;
        indices[192]=56;
        indices[193]=57;
        indices[194]=0;
        indices[195]=58;
        indices[196]=59;
        indices[197]=60;
        indices[198]=60;
        indices[199]=61;
        indices[200]=58;
        indices[201]=61;
        indices[202]=60;
        indices[203]=62;
        indices[204]=63;
        indices[205]=62;
        indices[206]=60;
        indices[207]=60;
        indices[208]=64;
        indices[209]=63;
        indices[210]=64;
        indices[211]=60;
        indices[212]=59;
        indices[213]=59;
        indices[214]=65;
        indices[215]=64;
        indices[216]=66;
        indices[217]=64;
        indices[218]=65;
        indices[219]=65;
        indices[220]=67;
        indices[221]=66;
        indices[222]=66;
        indices[223]=67;
        indices[224]=68;
        indices[225]=68;
        indices[226]=69;
        indices[227]=66;
        indices[228]=70;
        indices[229]=66;
        indices[230]=69;
        indices[231]=64;
        indices[232]=66;
        indices[233]=70;
        indices[234]=69;
        indices[235]=71;
        indices[236]=70;
        indices[237]=72;
        indices[238]=70;
        indices[239]=71;
        indices[240]=71;
        indices[241]=73;
        indices[242]=72;
        indices[243]=73;
        indices[244]=71;
        indices[245]=74;
        indices[246]=75;
        indices[247]=74;
        indices[248]=71;
        indices[249]=71;
        indices[250]=69;
        indices[251]=75;
        indices[252]=76;
        indices[253]=75;
        indices[254]=69;
        indices[255]=69;
        indices[256]=77;
        indices[257]=76;
        indices[258]=76;
        indices[259]=77;
        indices[260]=78;
        indices[261]=75;
        indices[262]=76;
        indices[263]=79;
        indices[264]=79;
        indices[265]=80;
        indices[266]=75;
        indices[267]=74;
        indices[268]=75;
        indices[269]=80;
        indices[270]=80;
        indices[271]=81;
        indices[272]=74;
        indices[273]=82;
        indices[274]=74;
        indices[275]=81;
        indices[276]=74;
        indices[277]=82;
        indices[278]=73;
        indices[279]=81;
        indices[280]=83;
        indices[281]=82;
        indices[282]=83;
        indices[283]=81;
        indices[284]=84;
        indices[285]=85;
        indices[286]=84;
        indices[287]=81;
        indices[288]=84;
        indices[289]=85;
        indices[290]=86;
        indices[291]=86;
        indices[292]=87;
        indices[293]=84;
        indices[294]=87;
        indices[295]=86;
        indices[296]=88;
        indices[297]=88;
        indices[298]=89;
        indices[299]=87;
        indices[300]=90;
        indices[301]=87;
        indices[302]=89;
        indices[303]=89;
        indices[304]=91;
        indices[305]=90;
        indices[306]=87;
        indices[307]=90;
        indices[308]=92;
        indices[309]=92;
        indices[310]=84;
        indices[311]=87;
        indices[312]=84;
        indices[313]=92;
        indices[314]=83;
        indices[315]=86;
        indices[316]=85;
        indices[317]=80;
        indices[318]=81;
        indices[319]=80;
        indices[320]=85;
        indices[321]=80;
        indices[322]=79;
        indices[323]=86;
        indices[324]=72;
        indices[325]=73;
        indices[326]=93;
        indices[327]=93;
        indices[328]=94;
        indices[329]=72;
        indices[330]=94;
        indices[331]=93;
        indices[332]=95;
        indices[333]=95;
        indices[334]=96;
        indices[335]=94;
        indices[336]=65;
        indices[337]=59;
        indices[338]=97;
        indices[339]=97;
        indices[340]=98;
        indices[341]=65;
        indices[342]=98;
        indices[343]=97;
        indices[344]=99;
        indices[345]=99;
        indices[346]=100;
        indices[347]=98;
        indices[348]=100;
        indices[349]=99;
        indices[350]=101;
        indices[351]=101;
        indices[352]=102;
        indices[353]=100;
        indices[354]=102;
        indices[355]=101;
        indices[356]=103;
        indices[357]=103;
        indices[358]=104;
        indices[359]=102;
        indices[360]=70;
        indices[361]=63;
        indices[362]=64;
        indices[363]=63;
        indices[364]=70;
        indices[365]=72;
        indices[366]=72;
        indices[367]=105;
        indices[368]=63;
        indices[369]=105;
        indices[370]=72;
        indices[371]=94;
        indices[372]=94;
        indices[373]=106;
        indices[374]=105;
        indices[375]=106;
        indices[376]=94;
        indices[377]=96;
        indices[378]=96;
        indices[379]=107;
        indices[380]=106;
        indices[381]=62;
        indices[382]=63;
        indices[383]=108;
        indices[384]=108;
        indices[385]=109;
        indices[386]=62;
        indices[387]=58;
        indices[388]=61;
        indices[389]=110;
        indices[390]=111;
        indices[391]=110;
        indices[392]=61;
        indices[393]=61;
        indices[394]=112;
        indices[395]=111;
        indices[396]=113;
        indices[397]=111;
        indices[398]=112;
        indices[399]=112;
        indices[400]=114;
        indices[401]=113;
        indices[402]=113;
        indices[403]=114;
        indices[404]=115;
        indices[405]=115;
        indices[406]=116;
        indices[407]=113;
        indices[408]=116;
        indices[409]=115;
        indices[410]=117;
        indices[411]=117;
        indices[412]=118;
        indices[413]=116;
        indices[414]=111;
        indices[415]=113;
        indices[416]=119;
        indices[417]=119;
        indices[418]=120;
        indices[419]=111;
        indices[420]=110;
        indices[421]=111;
        indices[422]=120;
        indices[423]=120;
        indices[424]=121;
        indices[425]=110;
        indices[426]=122;
        indices[427]=110;
        indices[428]=121;
        indices[429]=121;
        indices[430]=123;
        indices[431]=122;
        indices[432]=123;
        indices[433]=121;
        indices[434]=124;
        indices[435]=124;
        indices[436]=125;
        indices[437]=123;
        indices[438]=125;
        indices[439]=124;
        indices[440]=126;
        indices[441]=126;
        indices[442]=127;
        indices[443]=125;
        indices[444]=128;
        indices[445]=127;
        indices[446]=126;
        indices[447]=127;
        indices[448]=128;
        indices[449]=129;
        indices[450]=130;
        indices[451]=129;
        indices[452]=128;
        indices[453]=128;
        indices[454]=131;
        indices[455]=130;
        indices[456]=131;
        indices[457]=128;
        indices[458]=132;
        indices[459]=132;
        indices[460]=133;
        indices[461]=131;
        indices[462]=133;
        indices[463]=132;
        indices[464]=134;
        indices[465]=134;
        indices[466]=135;
        indices[467]=133;
        indices[468]=135;
        indices[469]=134;
        indices[470]=120;
        indices[471]=120;
        indices[472]=119;
        indices[473]=135;
        indices[474]=121;
        indices[475]=120;
        indices[476]=134;
        indices[477]=134;
        indices[478]=124;
        indices[479]=121;
        indices[480]=124;
        indices[481]=134;
        indices[482]=132;
        indices[483]=132;
        indices[484]=126;
        indices[485]=124;
        indices[486]=126;
        indices[487]=132;
        indices[488]=128;
        indices[489]=129;
        indices[490]=136;
        indices[491]=127;
        indices[492]=122;
        indices[493]=123;
        indices[494]=137;
        indices[495]=110;
        indices[496]=138;
        indices[497]=58;
        indices[498]=59;
        indices[499]=58;
        indices[500]=138;
        indices[501]=138;
        indices[502]=139;
        indices[503]=59;
        indices[504]=139;
        indices[505]=138;
        indices[506]=140;
        indices[507]=140;
        indices[508]=141;
        indices[509]=139;
        indices[510]=142;
        indices[511]=143;
        indices[512]=144;
        indices[513]=143;
        indices[514]=142;
        indices[515]=145;
        indices[516]=145;
        indices[517]=146;
        indices[518]=143;
        indices[519]=146;
        indices[520]=145;
        indices[521]=147;
        indices[522]=147;
        indices[523]=148;
        indices[524]=146;
        indices[525]=148;
        indices[526]=147;
        indices[527]=149;
        indices[528]=149;
        indices[529]=150;
        indices[530]=148;
        indices[531]=151;
        indices[532]=152;
        indices[533]=153;
        indices[534]=153;
        indices[535]=154;
        indices[536]=151;
        indices[537]=154;
        indices[538]=153;
        indices[539]=155;
        indices[540]=155;
        indices[541]=156;
        indices[542]=154;
        indices[543]=157;
        indices[544]=158;
        indices[545]=159;
        indices[546]=159;
        indices[547]=160;
        indices[548]=157;
        indices[549]=160;
        indices[550]=159;
        indices[551]=161;
        indices[552]=161;
        indices[553]=162;
        indices[554]=160;
        indices[555]=163;
        indices[556]=164;
        indices[557]=165;
        indices[558]=165;
        indices[559]=166;
        indices[560]=163;
        indices[561]=166;
        indices[562]=165;
        indices[563]=167;
        indices[564]=167;
        indices[565]=168;
        indices[566]=166;
        indices[567]=169;
        indices[568]=170;
        indices[569]=171;
        indices[570]=171;
        indices[571]=172;
        indices[572]=169;
        indices[573]=172;
        indices[574]=171;
        indices[575]=173;
        indices[576]=173;
        indices[577]=174;
        indices[578]=172;
        indices[579]=174;
        indices[580]=173;
        indices[581]=175;
        indices[582]=175;
        indices[583]=176;
        indices[584]=174;
        indices[585]=177;
        indices[586]=178;
        indices[587]=179;
        indices[588]=179;
        indices[589]=180;
        indices[590]=177;
        indices[591]=178;
        indices[592]=177;
        indices[593]=181;
        indices[594]=181;
        indices[595]=182;
        indices[596]=178;
        indices[597]=183;
        indices[598]=184;
        indices[599]=185;
        indices[600]=185;
        indices[601]=186;
        indices[602]=183;
        indices[603]=186;
        indices[604]=185;
        indices[605]=187;
        indices[606]=187;
        indices[607]=188;
        indices[608]=186;
        indices[609]=186;
        indices[610]=188;
        indices[611]=189;
        indices[612]=189;
        indices[613]=190;
        indices[614]=186;
        indices[615]=183;
        indices[616]=186;
        indices[617]=190;
        indices[618]=190;
        indices[619]=191;
        indices[620]=183;
        indices[621]=192;
        indices[622]=193;
        indices[623]=194;
        indices[624]=194;
        indices[625]=195;
        indices[626]=192;
        indices[627]=195;
        indices[628]=194;
        indices[629]=196;
        indices[630]=196;
        indices[631]=197;
        indices[632]=195;
        indices[633]=197;
        indices[634]=196;
        indices[635]=198;
        indices[636]=198;
        indices[637]=199;
        indices[638]=197;
        indices[639]=200;
        indices[640]=201;
        indices[641]=202;
        indices[642]=202;
        indices[643]=203;
        indices[644]=200;
        indices[645]=203;
        indices[646]=202;
        indices[647]=204;
        indices[648]=204;
        indices[649]=205;
        indices[650]=203;
        indices[651]=205;
        indices[652]=204;
        indices[653]=206;
        indices[654]=206;
        indices[655]=207;
        indices[656]=205;
        indices[657]=207;
        indices[658]=206;
        indices[659]=208;
        indices[660]=208;
        indices[661]=209;
        indices[662]=207;
        indices[663]=210;
        indices[664]=211;
        indices[665]=212;
        indices[666]=212;
        indices[667]=213;
        indices[668]=210;
        indices[669]=213;
        indices[670]=212;
        indices[671]=214;
        indices[672]=214;
        indices[673]=215;
        indices[674]=213;
        indices[675]=215;
        indices[676]=214;
        indices[677]=216;
        indices[678]=216;
        indices[679]=217;
        indices[680]=215;
        indices[681]=218;
        indices[682]=219;
        indices[683]=220;
        indices[684]=220;
        indices[685]=221;
        indices[686]=218;
        indices[687]=221;
        indices[688]=220;
        indices[689]=222;
        indices[690]=222;
        indices[691]=223;
        indices[692]=221;
        indices[693]=222;
        indices[694]=220;
        indices[695]=224;
        indices[696]=225;
        indices[697]=224;
        indices[698]=220;
        indices[699]=220;
        indices[700]=219;
        indices[701]=225;
        indices[702]=224;
        indices[703]=226;
        indices[704]=222;
        indices[705]=227;
        indices[706]=228;
        indices[707]=229;
        indices[708]=229;
        indices[709]=230;
        indices[710]=227;
        indices[711]=229;
        indices[712]=228;
        indices[713]=231;
        indices[714]=231;
        indices[715]=232;
        indices[716]=229;
        indices[717]=233;
        indices[718]=234;
        indices[719]=235;
        indices[720]=235;
        indices[721]=236;
        indices[722]=233;
        indices[723]=233;
        indices[724]=236;
        indices[725]=237;
        indices[726]=237;
        indices[727]=238;
        indices[728]=233;
        indices[729]=239;
        indices[730]=240;
        indices[731]=241;
        indices[732]=242;
        indices[733]=243;
        indices[734]=244;
        indices[735]=244;
        indices[736]=245;
        indices[737]=242;
        indices[738]=245;
        indices[739]=244;
        indices[740]=246;
        indices[741]=246;
        indices[742]=247;
        indices[743]=245;
        indices[744]=247;
        indices[745]=246;
        indices[746]=248;
        indices[747]=249;
        indices[748]=248;
        indices[749]=246;
        indices[750]=246;
        indices[751]=250;
        indices[752]=249;
        indices[753]=250;
        indices[754]=246;
        indices[755]=244;
        indices[756]=244;
        indices[757]=251;
        indices[758]=250;
        indices[759]=251;
        indices[760]=244;
        indices[761]=243;
        indices[762]=243;
        indices[763]=252;
        indices[764]=251;
        indices[765]=253;
        indices[766]=254;
        indices[767]=255;
        indices[768]=255;
        indices[769]=256;
        indices[770]=253;
        indices[771]=257;
        indices[772]=253;
        indices[773]=256;
        indices[774]=256;
        indices[775]=258;
        indices[776]=257;
        indices[777]=258;
        indices[778]=256;
        indices[779]=259;
        indices[780]=260;
        indices[781]=259;
        indices[782]=256;
        indices[783]=256;
        indices[784]=255;
        indices[785]=260;
        indices[786]=259;
        indices[787]=260;
        indices[788]=261;
        indices[789]=262;
        indices[790]=263;
        indices[791]=264;
        indices[792]=265;
        indices[793]=266;
        indices[794]=267;
        indices[795]=266;
        indices[796]=265;
        indices[797]=268;
        indices[798]=269;
        indices[799]=270;
        indices[800]=271;
        indices[801]=270;
        indices[802]=269;
        indices[803]=272;
        indices[804]=273;
        indices[805]=274;
        indices[806]=275;
        indices[807]=276;
        indices[808]=277;
        indices[809]=278;
        indices[810]=279;
        indices[811]=280;
        indices[812]=281;
        indices[813]=282;
        indices[814]=283;
        indices[815]=284;
        indices[816]=285;
        indices[817]=286;
        indices[818]=287;
        indices[819]=287;
        indices[820]=288;
        indices[821]=285;
        indices[822]=289;
        indices[823]=285;
        indices[824]=288;
        indices[825]=288;
        indices[826]=290;
        indices[827]=289;
        indices[828]=290;
        indices[829]=288;
        indices[830]=291;
        indices[831]=292;
        indices[832]=291;
        indices[833]=288;
        indices[834]=288;
        indices[835]=287;
        indices[836]=292;
        indices[837]=291;
        indices[838]=293;
        indices[839]=290;
        indices[840]=294;
        indices[841]=295;
        indices[842]=296;
        indices[843]=296;
        indices[844]=297;
        indices[845]=294;
        indices[846]=297;
        indices[847]=296;
        indices[848]=298;
        indices[849]=298;
        indices[850]=299;
        indices[851]=297;
        indices[852]=300;
        indices[853]=298;
        indices[854]=296;
        indices[855]=296;
        indices[856]=301;
        indices[857]=300;
        indices[858]=301;
        indices[859]=296;
        indices[860]=295;
        indices[861]=295;
        indices[862]=302;
        indices[863]=301;
        indices[864]=303;
        indices[865]=304;
        indices[866]=305;
        indices[867]=305;
        indices[868]=306;
        indices[869]=303;
        indices[870]=307;
        indices[871]=303;
        indices[872]=306;
        indices[873]=306;
        indices[874]=308;
        indices[875]=307;
        indices[876]=308;
        indices[877]=306;
        indices[878]=309;
        indices[879]=310;
        indices[880]=309;
        indices[881]=306;
        indices[882]=306;
        indices[883]=305;
        indices[884]=310;
        indices[885]=309;
        indices[886]=311;
        indices[887]=308;
        indices[888]=312;
        indices[889]=313;
        indices[890]=314;
        indices[891]=314;
        indices[892]=315;
        indices[893]=312;
        indices[894]=315;
        indices[895]=314;
        indices[896]=316;
        indices[897]=316;
        indices[898]=317;
        indices[899]=315;
        indices[900]=318;
        indices[901]=316;
        indices[902]=314;
        indices[903]=314;
        indices[904]=319;
        indices[905]=318;
        indices[906]=319;
        indices[907]=314;
        indices[908]=313;
        indices[909]=313;
        indices[910]=320;
        indices[911]=319;
        indices[912]=321;
        indices[913]=322;
        indices[914]=323;
        indices[915]=323;
        indices[916]=324;
        indices[917]=321;
        indices[918]=325;
        indices[919]=323;
        indices[920]=322;
        indices[921]=322;
        indices[922]=326;
        indices[923]=325;
        indices[924]=327;
        indices[925]=325;
        indices[926]=326;
        indices[927]=326;
        indices[928]=328;
        indices[929]=327;
        indices[930]=329;
        indices[931]=330;
        indices[932]=331;
        indices[933]=331;
        indices[934]=332;
        indices[935]=329;
        indices[936]=333;
        indices[937]=329;
        indices[938]=332;
        indices[939]=332;
        indices[940]=334;
        indices[941]=333;
        indices[942]=335;
        indices[943]=333;
        indices[944]=334;
        indices[945]=334;
        indices[946]=336;
        indices[947]=335;
        indices[948]=337;
        indices[949]=338;
        indices[950]=339;
        indices[951]=340;
        indices[952]=341;
        indices[953]=342;
        indices[954]=341;
        indices[955]=340;
        indices[956]=343;
        indices[957]=343;
        indices[958]=344;
        indices[959]=341;
        indices[960]=344;
        indices[961]=343;
        indices[962]=345;
        indices[963]=346;
        indices[964]=347;
        indices[965]=348;
        indices[966]=348;
        indices[967]=349;
        indices[968]=346;
        indices[969]=349;
        indices[970]=348;
        indices[971]=350;
        indices[972]=350;
        indices[973]=351;
        indices[974]=349;
        indices[975]=351;
        indices[976]=350;
        indices[977]=352;
        indices[978]=352;
        indices[979]=353;
        indices[980]=351;
        indices[981]=354;
        indices[982]=355;
        indices[983]=356;
        indices[984]=356;
        indices[985]=357;
        indices[986]=354;
        indices[987]=357;
        indices[988]=356;
        indices[989]=358;
        indices[990]=358;
        indices[991]=359;
        indices[992]=357;
        indices[993]=359;
        indices[994]=358;
        indices[995]=360;
        indices[996]=360;
        indices[997]=361;
        indices[998]=359;
        indices[999]=362;
        indices[1000]=363;
        indices[1001]=364;
        indices[1002]=365;
        indices[1003]=366;
        indices[1004]=367;
        indices[1005]=367;
        indices[1006]=368;
        indices[1007]=365;
        indices[1008]=369;
        indices[1009]=365;
        indices[1010]=368;
        indices[1011]=368;
        indices[1012]=370;
        indices[1013]=369;
        indices[1014]=370;
        indices[1015]=368;
        indices[1016]=371;
        indices[1017]=372;
        indices[1018]=371;
        indices[1019]=368;
        indices[1020]=368;
        indices[1021]=367;
        indices[1022]=372;
        indices[1023]=371;
        indices[1024]=373;
        indices[1025]=370;
        indices[1026]=374;
        indices[1027]=375;
        indices[1028]=376;
        indices[1029]=377;
        indices[1030]=376;
        indices[1031]=375;
        indices[1032]=375;
        indices[1033]=378;
        indices[1034]=377;
        indices[1035]=376;
        indices[1036]=377;
        indices[1037]=379;
        indices[1038]=380;
        indices[1039]=381;
        indices[1040]=382;
        indices[1041]=383;
        indices[1042]=384;
        indices[1043]=385;
        indices[1044]=385;
        indices[1045]=386;
        indices[1046]=383;
        indices[1047]=387;
        indices[1048]=388;
        indices[1049]=389;
        indices[1050]=389;
        indices[1051]=390;
        indices[1052]=387;
        indices[1053]=391;
        indices[1054]=389;
        indices[1055]=388;
        indices[1056]=392;
        indices[1057]=393;
        indices[1058]=394;
        indices[1059]=394;
        indices[1060]=395;
        indices[1061]=392;
        indices[1062]=396;
        indices[1063]=397;
        indices[1064]=398;
        indices[1065]=398;
        indices[1066]=399;
        indices[1067]=396;
        indices[1068]=400;
        indices[1069]=398;
        indices[1070]=397;
        indices[1071]=397;
        indices[1072]=401;
        indices[1073]=400;
        indices[1074]=402;
        indices[1075]=403;
        indices[1076]=404;
        indices[1077]=404;
        indices[1078]=405;
        indices[1079]=402;
        indices[1080]=406;
        indices[1081]=402;
        indices[1082]=405;
        indices[1083]=405;
        indices[1084]=407;
        indices[1085]=406;
        indices[1086]=408;
        indices[1087]=409;
        indices[1088]=410;
        indices[1089]=410;
        indices[1090]=411;
        indices[1091]=408;
        indices[1092]=412;
        indices[1093]=413;
        indices[1094]=414;
        indices[1095]=414;
        indices[1096]=415;
        indices[1097]=412;
        indices[1098]=416;
        indices[1099]=414;
        indices[1100]=413;
        indices[1101]=413;
        indices[1102]=417;
        indices[1103]=416;
        indices[1104]=418;
        indices[1105]=419;
        indices[1106]=420;
        indices[1107]=420;
        indices[1108]=421;
        indices[1109]=418;
        indices[1110]=422;
        indices[1111]=418;
        indices[1112]=421;
        indices[1113]=421;
        indices[1114]=423;
        indices[1115]=422;
        indices[1116]=424;
        indices[1117]=425;
        indices[1118]=426;
        indices[1119]=426;
        indices[1120]=427;
        indices[1121]=424;
        indices[1122]=428;
        indices[1123]=429;
        indices[1124]=430;
        indices[1125]=430;
        indices[1126]=431;
        indices[1127]=428;
        indices[1128]=432;
        indices[1129]=430;
        indices[1130]=429;
        indices[1131]=429;
        indices[1132]=433;
        indices[1133]=432;
        indices[1134]=434;
        indices[1135]=435;
        indices[1136]=436;
        indices[1137]=436;
        indices[1138]=437;
        indices[1139]=434;
        indices[1140]=438;
        indices[1141]=434;
        indices[1142]=437;
        indices[1143]=437;
        indices[1144]=439;
        indices[1145]=438;
        indices[1146]=440;
        indices[1147]=441;
        indices[1148]=442;
        indices[1149]=442;
        indices[1150]=443;
        indices[1151]=440;
        indices[1152]=444;
        indices[1153]=445;
        indices[1154]=446;
        indices[1155]=446;
        indices[1156]=447;
        indices[1157]=444;
        indices[1158]=448;
        indices[1159]=449;
        indices[1160]=450;
        indices[1161]=450;
        indices[1162]=451;
        indices[1163]=448;
        indices[1164]=452;
        indices[1165]=453;
        indices[1166]=454;
        indices[1167]=454;
        indices[1168]=455;
        indices[1169]=452;
        indices[1170]=456;
        indices[1171]=454;
        indices[1172]=453;
        indices[1173]=453;
        indices[1174]=457;
        indices[1175]=456;
        indices[1176]=458;
        indices[1177]=456;
        indices[1178]=457;
        indices[1179]=457;
        indices[1180]=459;
        indices[1181]=458;
        indices[1182]=460;
        indices[1183]=461;
        indices[1184]=462;
        indices[1185]=462;
        indices[1186]=463;
        indices[1187]=460;
        indices[1188]=464;
        indices[1189]=460;
        indices[1190]=463;
        indices[1191]=463;
        indices[1192]=465;
        indices[1193]=464;
        indices[1194]=466;
        indices[1195]=467;
        indices[1196]=468;
        indices[1197]=468;
        indices[1198]=469;
        indices[1199]=466;
        indices[1200]=470;
        indices[1201]=471;
        indices[1202]=472;
        indices[1203]=472;
        indices[1204]=473;
        indices[1205]=470;
        indices[1206]=474;
        indices[1207]=472;
        indices[1208]=471;
        indices[1209]=471;
        indices[1210]=475;
        indices[1211]=474;
        indices[1212]=476;
        indices[1213]=477;
        indices[1214]=478;
        indices[1215]=478;
        indices[1216]=479;
        indices[1217]=476;
        indices[1218]=480;
        indices[1219]=476;
        indices[1220]=479;
        indices[1221]=479;
        indices[1222]=481;
        indices[1223]=480;
        indices[1224]=482;
        indices[1225]=480;
        indices[1226]=481;
        indices[1227]=481;
        indices[1228]=483;
        indices[1229]=482;
        indices[1230]=484;
        indices[1231]=485;
        indices[1232]=486;
        indices[1233]=486;
        indices[1234]=487;
        indices[1235]=484;
        indices[1236]=488;
        indices[1237]=486;
        indices[1238]=485;
        indices[1239]=485;
        indices[1240]=489;
        indices[1241]=488;
        indices[1242]=490;
        indices[1243]=491;
        indices[1244]=492;
        indices[1245]=492;
        indices[1246]=493;
        indices[1247]=490;
        indices[1248]=494;
        indices[1249]=492;
        indices[1250]=491;
        indices[1251]=491;
        indices[1252]=495;
        indices[1253]=494;
        indices[1254]=496;
        indices[1255]=497;
        indices[1256]=498;
        indices[1257]=499;
        indices[1258]=500;
        indices[1259]=501;
        indices[1260]=502;
        indices[1261]=503;
        indices[1262]=504;
        indices[1263]=505;
        indices[1264]=506;
        indices[1265]=507;
        indices[1266]=506;
        indices[1267]=505;
        indices[1268]=508;
        indices[1269]=508;
        indices[1270]=509;
        indices[1271]=506;
        indices[1272]=510;
        indices[1273]=511;
        indices[1274]=512;
        indices[1275]=512;
        indices[1276]=513;
        indices[1277]=510;
        indices[1278]=513;
        indices[1279]=512;
        indices[1280]=514;
        indices[1281]=514;
        indices[1282]=515;
        indices[1283]=513;
        indices[1284]=516;
        indices[1285]=517;
        indices[1286]=518;
        indices[1287]=518;
        indices[1288]=519;
        indices[1289]=516;
        indices[1290]=519;
        indices[1291]=518;
        indices[1292]=520;
        indices[1293]=520;
        indices[1294]=521;
        indices[1295]=519;
        indices[1296]=522;
        indices[1297]=523;
        indices[1298]=524;
        indices[1299]=525;
        indices[1300]=526;
        indices[1301]=527;
        indices[1302]=528;
        indices[1303]=529;
        indices[1304]=530;
        indices[1305]=530;
        indices[1306]=531;
        indices[1307]=528;
        indices[1308]=532;
        indices[1309]=533;
        indices[1310]=534;
        indices[1311]=534;
        indices[1312]=535;
        indices[1313]=532;
        indices[1314]=536;
        indices[1315]=537;
        indices[1316]=538;
        indices[1317]=538;
        indices[1318]=539;
        indices[1319]=536;
        indices[1320]=540;
        indices[1321]=541;
        indices[1322]=542;
        indices[1323]=542;
        indices[1324]=543;
        indices[1325]=540;
        indices[1326]=542;
        indices[1327]=541;
        indices[1328]=544;
        indices[1329]=544;
        indices[1330]=545;
        indices[1331]=542;
        indices[1332]=546;
        indices[1333]=547;
        indices[1334]=548;
        indices[1335]=548;
        indices[1336]=549;
        indices[1337]=546;
        indices[1338]=546;
        indices[1339]=549;
        indices[1340]=550;
        indices[1341]=550;
        indices[1342]=551;
        indices[1343]=546;
        indices[1344]=552;
        indices[1345]=553;
        indices[1346]=554;
        indices[1347]=554;
        indices[1348]=555;
        indices[1349]=552;
        indices[1350]=556;
        indices[1351]=557;
        indices[1352]=558;
        indices[1353]=558;
        indices[1354]=559;
        indices[1355]=556;
        indices[1356]=556;
        indices[1357]=559;
        indices[1358]=560;
        indices[1359]=560;
        indices[1360]=561;
        indices[1361]=556;
        indices[1362]=562;
        indices[1363]=563;
        indices[1364]=564;
        indices[1365]=564;
        indices[1366]=565;
        indices[1367]=562;
        indices[1368]=566;
        indices[1369]=567;
        indices[1370]=568;
        indices[1371]=568;
        indices[1372]=569;
        indices[1373]=566;
        indices[1374]=570;
        indices[1375]=571;
        indices[1376]=572;
        indices[1377]=572;
        indices[1378]=573;
        indices[1379]=570;
        indices[1380]=572;
        indices[1381]=571;
        indices[1382]=574;
        indices[1383]=574;
        indices[1384]=575;
        indices[1385]=572;
        indices[1386]=576;
        indices[1387]=577;
        indices[1388]=578;
        indices[1389]=578;
        indices[1390]=579;
        indices[1391]=576;
        indices[1392]=580;
        indices[1393]=581;
        indices[1394]=582;
        indices[1395]=582;
        indices[1396]=583;
        indices[1397]=580;
        indices[1398]=584;
        indices[1399]=585;
        indices[1400]=586;
        indices[1401]=586;
        indices[1402]=587;
        indices[1403]=584;

        dSpaceID space = dSimpleSpaceCreate(0) ;
        
        dTriMeshDataID Data = dGeomTriMeshDataCreate();
        dGeomTriMeshDataBuildSingle(Data, 
                                    &vertex[0],3*sizeof(dReal),VertexCount,
                                    &indices[0],IndexCount,3*sizeof(int));
        
        TriMesh = dCreateTriMesh(space,Data,0,0,0) ;
        dGeomSetData(TriMesh, Data) ;

        dReal* aabb = new dReal[6] ;
        dGeomGetAABB(TriMesh,aabb) ;
        
        // we create a cube  
        dGeomID cube = dCreateBox(space,1,1,14) ;
        dGeomSetPosition(cube,19.2,0,35+7) ;

        dContactGeom contacts[100] ;
        int number = dCollide(TriMesh,cube,100,contacts,sizeof(dContactGeom)) ;
        std::cout << "number of contact points " << number << std::endl ; 
        if (number)
        {
          std::cout << "contact point " 
                    << contacts[0].pos[0]
                    << "," 
                    << contacts[0].pos[1]
                    << "," 
                    << contacts[0].pos[2]
                    << std::endl ;
        }
        
        CPPUNIT_ASSERT(number==0) ;
        dSpaceDestroy(space) ;
        dCloseODE() ;
      }
      
      void TestODE::testTrimeshCubeCollisionBasic()
      {

        dInitODE() ;
        dWorldID world = dWorldCreate() ;
        
        int VertexCount = 24 ;
        int IndexCount = 36 ;
        dVector3 vertex[VertexCount] ;
        int indices[IndexCount] ;

        vertex[0][0]=1;
        vertex[0][1]=1;
        vertex[0][2]=-0.999999;
        vertex[0][3]=0;
        vertex[1][0]=1;
        vertex[1][1]=-1;
        vertex[1][2]=-1;
        vertex[1][3]=0;
        vertex[2][0]=-1;
        vertex[2][1]=1;
        vertex[2][2]=-1;
        vertex[2][3]=0;
        vertex[3][0]=-1;
        vertex[3][1]=-1;
        vertex[3][2]=-1;
        vertex[3][3]=0;
        vertex[4][0]=-1;
        vertex[4][1]=-1;
        vertex[4][2]=1;
        vertex[4][3]=0;
        vertex[5][0]=-1;
        vertex[5][1]=1;
        vertex[5][2]=1;
        vertex[5][3]=0;
        vertex[6][0]=-1;
        vertex[6][1]=1;
        vertex[6][2]=-1;
        vertex[6][3]=0;
        vertex[7][0]=-1;
        vertex[7][1]=-1;
        vertex[7][2]=-1;
        vertex[7][3]=0;
        vertex[8][0]=1;
        vertex[8][1]=-1;
        vertex[8][2]=1;
        vertex[8][3]=0;
        vertex[9][0]=0.999999;
        vertex[9][1]=1;
        vertex[9][2]=1;
        vertex[9][3]=0;
        vertex[10][0]=-1;
        vertex[10][1]=-1;
        vertex[10][2]=1;
        vertex[10][3]=0;
        vertex[11][0]=-1;
        vertex[11][1]=1;
        vertex[11][2]=1;
        vertex[11][3]=0;
        vertex[12][0]=1;
        vertex[12][1]=-1;
        vertex[12][2]=-1;
        vertex[12][3]=0;
        vertex[13][0]=1;
        vertex[13][1]=1;
        vertex[13][2]=-0.999999;
        vertex[13][3]=0;
        vertex[14][0]=1;
        vertex[14][1]=-1;
        vertex[14][2]=1;
        vertex[14][3]=0;
        vertex[15][0]=0.999999;
        vertex[15][1]=1;
        vertex[15][2]=1;
        vertex[15][3]=0;
        vertex[16][0]=1;
        vertex[16][1]=1;
        vertex[16][2]=-0.999999;
        vertex[16][3]=0;
        vertex[17][0]=-1;
        vertex[17][1]=1;
        vertex[17][2]=-1;
        vertex[17][3]=0;
        vertex[18][0]=-1;
        vertex[18][1]=1;
        vertex[18][2]=1;
        vertex[18][3]=0;
        vertex[19][0]=0.999999;
        vertex[19][1]=1;
        vertex[19][2]=1;
        vertex[19][3]=0;
        vertex[20][0]=1;
        vertex[20][1]=-1;
        vertex[20][2]=-1;
        vertex[20][3]=0;
        vertex[21][0]=1;
        vertex[21][1]=-1;
        vertex[21][2]=1;
        vertex[21][3]=0;
        vertex[22][0]=-1;
        vertex[22][1]=-1;
        vertex[22][2]=1;
        vertex[22][3]=0;
        vertex[23][0]=-1;
        vertex[23][1]=-1;
        vertex[23][2]=-1;
        vertex[23][3]=0;
        
        indices[0]=0;
        indices[1]=1;
        indices[2]=2;
        indices[3]=1;
        indices[4]=3;
        indices[5]=2;
        indices[6]=4;
        indices[7]=5;
        indices[8]=6;
        indices[9]=4;
        indices[10]=6;
        indices[11]=7;
        indices[12]=8;
        indices[13]=9;
        indices[14]=10;
        indices[15]=9;
        indices[16]=11;
        indices[17]=10;
        indices[18]=12;
        indices[19]=13;
        indices[20]=14;
        indices[21]=13;
        indices[22]=15;
        indices[23]=14;
        indices[24]=16;
        indices[25]=17;
        indices[26]=18;
        indices[27]=16;
        indices[28]=18;
        indices[29]=19;
        indices[30]=20;
        indices[31]=21;
        indices[32]=22;
        indices[33]=20;
        indices[34]=22;
        indices[35]=23;

        dSpaceID space = dSimpleSpaceCreate(0) ;
        dJointGroupID contactgroup = dJointGroupCreate(0) ;
        dTriMeshDataID data = dGeomTriMeshDataCreate();

        dGeomTriMeshDataBuildSimple(data, (dReal*)vertex, VertexCount, indices, IndexCount) ;
        TriMesh = dCreateTriMesh(space,data,0,0,0) ;
        
        /*!
          If we do not call GetAABB : no collision for that trimesh !! 
        */
        dReal* aabb = new dReal[6] ;
        dGeomGetAABB(TriMesh,aabb) ;
        
        // we create a cube  
        dGeomID cube = dCreateBox(space,1,1,1) ;

        dContactGeom contacts[100] ;
        
        // too far for collision
        dGeomSetPosition(cube,2,0,0) ;
        CPPUNIT_ASSERT(dCollide(TriMesh,cube,100,contacts,sizeof(dContactGeom))==0) ;

        // collision
        dGeomSetPosition(cube,1.4,0,0) ;
        CPPUNIT_ASSERT(dCollide(TriMesh,cube,100,contacts,sizeof(dContactGeom))!=0) ;

        dJointGroupDestroy (contactgroup);
        dSpaceDestroy (space);
        dWorldDestroy (world);
        dCloseODE() ;
      }
      
      void TestODE::testCubeCubeCollision()
      {
        dInitODE();

        dSpaceID space = dSimpleSpaceCreate(0) ;

        dGeomID cube1 = dCreateBox(space,10,10,10) ;
        dGeomSetPosition(cube1,0,0,0) ;

        dGeomID cube2 = dCreateBox(space,10,10,10) ;
        dGeomSetPosition(cube2,0,20,0) ;
        
        dContactGeom contacts[10] ;
        CPPUNIT_ASSERT(dCollide(cube1,cube2,10,contacts,sizeof(dContactGeom))==0) ;
        
        dGeomSetPosition(cube2,0,9,0) ;
        CPPUNIT_ASSERT(dCollide(cube1,cube2,10,contacts,sizeof(dContactGeom))!=0) ;
        
        dCloseODE() ;
      }
      
      void TestODE::testTrimeshInertia()
      {
        Model::Mesh mesh("razor.mesh") ;
        
        std::vector< ::Ogre::Vector3> vertices ;
        std::vector<unsigned long>    indices ;
        Ogre::Vector3                 scale(1,1,1) ;        

        mesh.getMeshInformation(vertices,indices,scale) ;
        float mass ;
        Ogre::Vector3 center ;
        Ogre::Matrix3 inertia ;
        ComputeMassProperties(vertices,indices,true,mass,center,inertia) ;
      
//        std::cout << "center = " << center 
//                  << " inertia= " 
//                  << inertia.GetColumn(0) << " "  
//                  << inertia.GetColumn(1) << " "
//                  << inertia.GetColumn(2) 
//                  << std::endl ;
      }

      void TestODE::setUp() 
      {
        Kernel::Parameters::load("demonstration.config") ;
      }
      
      void TestODE::tearDown() 
      {
      }


    }
  }
}
