2006-07-14 rogma <rogma.boami@free.fr>

  * entrees, action, affichage : 

        general interface and testing implementation


2006-10-22 rogma <rogma.boami@free.fr>

  * livraison version 0.1.0

2006-10-27 rogma <rogma.boami@free.fr>
  
  * configure.ac : incrémentation de la version 

  * modele 
      - objet.h, modele.h : ajout de Enlever(Objet)
  * entrees
      - clavier.cpp (keyPressed) : ajout de la touche 'D' provoquant une 
        action
  * base
      - point_de_vue.h : ajout de Enlever(BaseVue)
      - vue.cxx : correction d'une segmentation fault 
                        (ajout de test de validité de observe dans ~Vue)
  * action
      - action.cpp : ajout du traitement d'une nouvelle action détruisant 
        un objet
  * affichage :
      - point_de_vue.h : 
         ajout d'une spécialisation de Detruire(BaseVue)
         correction de include/déclarations en avant
      - objet.h/cpp : correction du type de retours de Ajouter(Facette*)
                               ajout de Enlever pour Objet et Facette

2007-02-17 rogma <rogma.boami@free.fr>

  * affichage/point_de_vue.h : ajout de changer_observateur

2007-02-22 rogma <rogma.boami@free.fr>

  * change language to english

2007-03-10 rogma <rogma.boami@free.fr>
  
  * kernel : now contains model view framework
  * model : simplified uses kernel model
  * display : simplified uses kernel view and viewpoint

2007-03-25 rogma <rogma.boami@free.fr>
  
  * kernel : bug corrections : 
    - getTrait made an empty trait (test added)
    - detroying a model with initialised viewpoint made an error (test added)
  * model : added functionnalities
    - Positionned now can compute position/orientation relatively to 
      an other object (test added)
    - changes on Position, Orientation
    - PhysicalObject, PhysicalWorld, Massive, AngularSpeed, Component, 
      Composite added
  * physic : creation of the physic module

2007-03-27 rogma <rogma.boami@free.fr>

  Work on physic :
  * model : 
    - Positionned : added set position/orientation relative to any object
  * physic : added modification of Position according to physic simulation
  * kernel :
    - added forAll<View> that allows to call a method on each View element of 
      a viewpoint

  Work on windows port :
  * kernel :
    - inherits.h removed some annoying warning about unused variables
  * makefiles/autoconf : modifications for libtool
  * display
    - display.cpp corrected a possible bug
  * added preliminary codeblocks projects for modules

2007-04-20 rogma <rogma.boami@free.fr>

  Work on deduction :
  * kernel :
    - added deduced_trait.h/cpp : handling of deduced trait, formulas And, Or, 
      Not, HasTrait + tests
  * model : 
    - used deduction for physical object, whole and physical world
  * physic
    - validated deduction usage throught small changes

  Demo :
  * kernel :
    added timer
  * demonstration
    usage of physic module  

  Diverse :
  * kernel : renaming of member data, added preliminary timer class
  * all : removed some warnings  

2007-04-22 rogma <rogma.boami@free.fr>

  Diverse :
  * kernel : added meta.h/cpp for centralization of class identification
  * all modified makefiles

2007-06-05 rogma <rogma.boami@free.fr>

  Architecture :
  * kernel : added controler.h/.cpp, a Model-modifying "procedure".
  * model : added a stabilizer+torque generator for element that resist rotation
  * physic : applied controler pattern+tested generator
  
  Demonstration :
  * usage of stabilizer to slowly stop rotation of one of the ships
   
2007-06-10 rogma <rogma.boami@free.fr>
   
   Diverse : 
   * all : some french comments turned into english
   * added codeblocks project for windows compilation
   * remove a bug in kernel
   * small changes in log

2007-06-18 rogma <rogma.boami@free.fr>
  
  * input : added mouse.h/cpp and mouse control of an oriented object
  * model : separation of positionned into positionned and orientated, and 
    impact on other modules
  * model : preliminary work on ship control : dragger, shipcontrol traits
  * display : added 3D line display for tests

2007-06-30 rogma <rogma.boami@free.fr>

  * input : added joystick.h/cpp and control of an oriented object
  * model : small modifications to demonstration model
  * model/stabilizer : correction of a big bug (test added in physic/test); 
    stabilizer would inc  rease rotation speed iff angular velocity is opposed 
    to stabilizer axis !!
  * model/ship_control : quite working
  * model/engine_control : working. Tests added.
  * model : semantic modification for Positionned and Oriented, they are now 
    relative to first Positionned/Oriented ancestor. Tests added.
  * kernel : splitted object.h in two files, added getParentUpTo

2007-07-06 rogma <rogma.boami@free.fr>

  * model : added stick/throttle plus tests
  * kernel : 
    - changed behaviour of object : only one trait of type T can be added
    - getTrait<X> will now return trait of type Y when Y is subclass of X
    - added preliminary Command system
  * input : usage of command system in joystick
  
2007-07-08 rogma <rogma.boami@free.fr>

  * kernel : 
    - added getAncestor<T> for getting first real ancestor having trait T
    - added static regis  tration for commands
  * physic : test of dragger
  * demo : added full piloting of one ship

2007-07-19 rogma <rogma.boami@free.fr>

  * model : 
    - added Ogre's Mesh on demand loading for test purpose
    - added Mesh::getMeshInformation that provide triangles of the mesh 
      for collision
  * physic : major update 'collisions'
    - added mesh collision support
    - added ODE tests (usefull for testing ODE behaviour when developping)
    - remove TestDemonstration::testModelPositionUpdate because it is a "copy"
      of testSimulateMovingInitialSpeed
    - removed Model::load in all TestDemonstration tests 

2007-08-04 rogma <rogma.boami@free.fr>
  
  * input : joystick bug correction (throttle would be set to middle when 
    changing direction)
    migration to OIS 1.0 and 1.1
  * display migration to ogre 1.4.3
  * kernel : 
  	- added Object::getchildren()
  	- added Parameters that reads .ini like files
  * model : added Laser and LaserBeam + test
  * all : 
    - updated codeblock config for windows compiling
  
2007-08-09 rogma <rogma.boami@free.fr>
  
  * all : 
    - modified compilation for mingw (windows) compatibility
  * display : remove circular dependecy between display and display/ogre
  * model : removed a bug from test_laser

2007-08-19 rogma <rogma.boami@free.fr>
  
  * all : 
    - modified compilation for mingw (windows) compatibility
  * model/physic : added parameter reading

2007-08-19 rogma <rogma.boami@free.fr>
  
  * input : added parameter reading for joystick


2007-08-26 rogma <rogma.boami@free.fr>
  
  * all : clarification of the copyright
  * kernel 
    - ControlerSet : clarified virtuality
    - Controler : added a specialised access to controler set 
    - Object : added an access to descendant (test added)
  * model : added Logic sub-module for model dynamic behaviour
    - Logic::LaserBeam controls the laser beam destruction after 
      a certain amount of time (test added)
  * physic/ode : 
    - removed unused onInit onClose on PhysicSystem
    - added a dCloseODE call

2007-09-11 Rogma, Minos
  
  * model : 
    - changed compilation, now have a implementation/logic sub directory 
      and still one lib model
    - added trait representing collision
    - model/logic : added collision controler, laser beam collision against 
      destroyable perform damage (test added)
    - added logic/destroyable controler (test added)
    - added Shot trait representing weapon firing (test added)
  * physic/ode : 
    - produced collision objects 
    - refactor solid and laser beam inherit collideable (laser beam does not 
      need to be solid anymore) (added laserbeam/solid colision test)
    - prevent laserbeam/laserbeam collision (added negative laserbeam/laserbeam 
      collision test)
  * display :
    - added laser beam view
  * kernel : modified RegisterView and RegisterControl to allow vitrual 
    inheritance between trait classes. (test added)
  * sound  :
    - small compiling corrections
    - added basic test for background sound
    
todos :

  * physic : 
    - try to keep all units in an acceptable "range", it means that we whould 
      be able to convert model units in an arbitrary "ranging system".
    - migrate PhysicalObject and PhysicalWorld to physic (for better separation
      of concerns)
  * all :
    - make use of Quantities ??
    
2007-10-13 Minos
  
  * sound  :
    - add manager and reader for streaming
    - deduction of trait information for position, orientation and speed
    - for the compilation now, Ogg, Vorbis, Vorbisfile and libsndfile are needed
    
todos :

  * sound : 
    - just keep relative model to a global reference
    - tests configuration in mouvement
    
2007-10-21 Minos

  * model :
    - add ear to represent the hearing of player
    - add listener, deduced trait for the sound (ear, positionned, ...)
    - add engine_sound, deduced trait for the sound (ear, positionned, ...)
  * sound :
    - add listener to replace observer, observe Model::listener
    - add engine_sound, observe Model::engine_sound
    - sound_emitter now implements default behavior
    - some fix on sound_emitter and sound_listener in properties setting.
    - openal now is configure in software mode, hardware (nvidia integrated shipset in my case)
      don't work for moving alone listener, and later for some effect
    * test :
      - add moving_object, source move on three axis
      - add cone_propertie, a listener turn around an engine and heard the variation with the angle
      
todos :
  
  * sound :
    - global effect on the mixed sound in function of Model::ear state
    - device selection between software/hardware
    
    
  